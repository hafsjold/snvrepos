//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace nsPuls3060.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "9.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("31")]
        public int BetalingsFristiDageGamleMedlemmer {
            get {
                return ((int)(this["BetalingsFristiDageGamleMedlemmer"]));
            }
            set {
                this["BetalingsFristiDageGamleMedlemmer"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("61")]
        public int BetalingsFristiDageNyeMedlemmer {
            get {
                return ((int)(this["BetalingsFristiDageNyeMedlemmer"]));
            }
            set {
                this["BetalingsFristiDageNyeMedlemmer"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("C:\\Documents and Settings\\mha\\Dokumenter\\Medlem3060\\Databaser\\SQLCompact\\dbData30" +
            "60.sdf")]
        public string DataBasePath {
            get {
                return ((string)(this["DataBasePath"]));
            }
            set {
                this["DataBasePath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("100, 100")]
        public global::System.Drawing.Point frmMainPoint {
            get {
                return ((global::System.Drawing.Point)(this["frmMainPoint"]));
            }
            set {
                this["frmMainPoint"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1024, 800")]
        public global::System.Drawing.Size frmMainSize {
            get {
                return ((global::System.Drawing.Size)(this["frmMainSize"]));
            }
            set {
                this["frmMainSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("100, 100")]
        public global::System.Drawing.Point frmMedlemmerPoint {
            get {
                return ((global::System.Drawing.Point)(this["frmMedlemmerPoint"]));
            }
            set {
                this["frmMedlemmerPoint"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("800, 600")]
        public global::System.Drawing.Size frmMedlemmerSize {
            get {
                return ((global::System.Drawing.Size)(this["frmMedlemmerSize"]));
            }
            set {
                this["frmMedlemmerSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10, 10")]
        public global::System.Drawing.Point frmKreditorPoint {
            get {
                return ((global::System.Drawing.Point)(this["frmKreditorPoint"]));
            }
            set {
                this["frmKreditorPoint"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("304, 300")]
        public global::System.Drawing.Size frmKreditorSize {
            get {
                return ((global::System.Drawing.Size)(this["frmKreditorSize"]));
            }
            set {
                this["frmKreditorSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Normal")]
        public global::System.Windows.Forms.FormWindowState frmKreditorState {
            get {
                return ((global::System.Windows.Forms.FormWindowState)(this["frmKreditorState"]));
            }
            set {
                this["frmKreditorState"] = value;
            }
        }
    }
}

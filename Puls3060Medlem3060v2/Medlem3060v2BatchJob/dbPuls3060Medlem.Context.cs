//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace nsMedlem3060v2BatchJob
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbPuls3060Medlem : DbContext
    {
        public dbPuls3060Medlem()
            : base("name=dbPuls3060Medlem")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblJobqueue> tblJobqueue { get; set; }
        public virtual DbSet<tblSchedule> tblSchedule { get; set; }
    
        public virtual int jobqueueadd(Nullable<System.DateTime> starttime, string jobname, Nullable<int> scheduleid, Nullable<bool> onhold)
        {
            var starttimeParameter = starttime.HasValue ?
                new ObjectParameter("starttime", starttime) :
                new ObjectParameter("starttime", typeof(System.DateTime));
    
            var jobnameParameter = jobname != null ?
                new ObjectParameter("jobname", jobname) :
                new ObjectParameter("jobname", typeof(string));
    
            var scheduleidParameter = scheduleid.HasValue ?
                new ObjectParameter("scheduleid", scheduleid) :
                new ObjectParameter("scheduleid", typeof(int));
    
            var onholdParameter = onhold.HasValue ?
                new ObjectParameter("onhold", onhold) :
                new ObjectParameter("onhold", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("jobqueueadd", starttimeParameter, jobnameParameter, scheduleidParameter, onholdParameter);
        }
    
        public virtual int jobqueuecomplete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("jobqueuecomplete", idParameter);
        }
    
        public virtual int jobqueuenext_v2(ObjectParameter id, ObjectParameter jobname, ObjectParameter retur)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("jobqueuenext_v2", id, jobname, retur);
        }
    }
}

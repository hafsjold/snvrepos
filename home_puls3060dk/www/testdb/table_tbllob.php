<?php

require_once "config.inc.php";
require_once "db_utils.inc";
require_once "db_". $config['db'] . ".inc";

define('INP_MODE', 'mode');
define('INP_START', 'start');


define('ERR_INVALID_REQUEST', '<html><body>Invalid request.
    Click <a href=\"?mode=s\">here</a> to return to main page.</body></html>');
define('ERR_NO_KEY', '<html><body>Could not proceed. This form requires a key field that will uniquelly identify records in the table</body></html>');
define('MSG_UPDATED', "Record has been updated successfully.
    Click <a href=\"?mode=s&amp;start=%d\">here</a> to return to main page.");
define('MSG_INSERTED', "Record has been added successfully.
    Click <a href=\"?mode=s&amp;start=-1\">here</a> to return to main page.");
define('MSG_DELETED', "Record has been deleted successfully.
    Click <a href=\"?mode=s&amp;start=%d\">here</a> to return to main page.");

$table = 'public'.'tbllob';
$fielddef = array(
    'f0' => array(FLD_ID => true, FLD_VISIBLE => true, FLD_DISPLAY => 'id', FLD_DISPLAY_SZ => 7,
        FLD_INPUT => true, FLD_INPUT_TYPE => 'text',
        FLD_INPUT_SZ => 7, FLD_INPUT_MAXLEN => 10, FLD_INPUT_DFLT => '',
        FLD_INPUT_NOTEMPTY => true, FLD_INPUT_VALIDATION => 'Numeric',
        FLD_DATABASE => 'id'),
    'f1' => array(FLD_ID => false, FLD_VISIBLE => true, FLD_DISPLAY => 'navn', FLD_DISPLAY_SZ => 100,
        FLD_INPUT => true, FLD_INPUT_TYPE => 'text',
        FLD_INPUT_SZ => 100, FLD_INPUT_MAXLEN => 51, FLD_INPUT_DFLT => '',
        FLD_INPUT_NOTEMPTY => true, FLD_INPUT_VALIDATION => '',
        FLD_DATABASE => 'navn'),
    'f2' => array(FLD_ID => false, FLD_VISIBLE => true, FLD_DISPLAY => 'dato', FLD_DISPLAY_SZ => 22,
        FLD_INPUT => true, FLD_INPUT_TYPE => 'text',
        FLD_INPUT_SZ => 22, FLD_INPUT_MAXLEN => 30, FLD_INPUT_DFLT => '',
        FLD_INPUT_NOTEMPTY => true, FLD_INPUT_VALIDATION => '',
        FLD_DATABASE => 'dato'),
    'f3' => array(FLD_ID => false, FLD_VISIBLE => true, FLD_DISPLAY => 'nrtype', FLD_DISPLAY_SZ => 100,
        FLD_INPUT => true, FLD_INPUT_TYPE => 'text',
        FLD_INPUT_SZ => 100, FLD_INPUT_MAXLEN => 11, FLD_INPUT_DFLT => '',
        FLD_INPUT_NOTEMPTY => true, FLD_INPUT_VALIDATION => '',
        FLD_DATABASE => 'nrtype'),
    'f4' => array(FLD_ID => false, FLD_VISIBLE => true, FLD_DISPLAY => 'afhente_dit_loebsnummer', FLD_DISPLAY_SZ => 100,
        FLD_INPUT => true, FLD_INPUT_TYPE => 'text',
        FLD_INPUT_SZ => 100, FLD_INPUT_MAXLEN => 513, FLD_INPUT_DFLT => '',
        FLD_INPUT_NOTEMPTY => true, FLD_INPUT_VALIDATION => '',
        FLD_DATABASE => 'afhente_dit_loebsnummer')
);
    

$show_data = false;
$show_input = false;
$show_message = false;
$message = NULL;
$start = 0;
$fld_indices_notempty = NULL;
$fld_indices_Email = NULL;
$fld_indices_Alpha = NULL;
$fld_indices_AlphaNum = NULL;
$fld_indices_Numeric = NULL;
$fld_indices_Float = NULL;
$fld_indices_Date = NULL;
$fld_indices_Time = NULL;

/* 
   order by and start parameters define the sorting criteria and current page
   both are passed by Ajax request because they are wired in the call to ajaxFunctionForm()
   generated by this script
*/
if (isset($_REQUEST['order_by']))
    $order_by = $_REQUEST['order_by'];
else
    $order_by = "f0";

if ($_SERVER['REQUEST_METHOD'] != "POST") {
    $mode = isset($_GET[INP_MODE]) ? $_GET[INP_MODE] : 's';
    if (($mode != 's') && ($mode != 'i') && ($mode != 'u') && ($mode != 'd')) {
        dbu_handle_error(ERR_INVALID_REQUEST);
    }
} else if (isset($_POST[INP_MODE])) {
    $mode = $_POST[INP_MODE];
    if (($mode != 'i2') && ($mode != 'u2')) {
        dbu_handle_error(ERR_INVALID_REQUEST);
    }
} else if (isset($_GET[INP_MODE])) {
    $mode = $_GET[INP_MODE];
    if (($mode != 's') && ($mode != 'i') && ($mode != 'u') && ($mode != 'd')) {
        dbu_handle_error(ERR_INVALID_REQUEST);
    }
} else {
    dbu_handle_error(ERR_INVALID_REQUEST);
}

$keys = dbu_get_keys($fielddef);
if (!$keys) {
    dbu_handle_error(ERR_NO_KEY);
}

$dbconn = dbu_factory($config['db']);
/** @var dbconn */
$dbconn->db_extension_installed();
$dbconn->db_connect($config['dbhost'], $config['dblogin'], $config['dbpass'], $config['dbname'], $config['dbport']);

switch ($mode) {
    case 's':
        $pager=array();
        $start = (isset($_GET[INP_START]) && is_numeric($_GET[INP_START])) ? (int)$_GET[INP_START] : 0;
        $rows = dbu_handle_select($fielddef, $table, $dbconn, $keys, $start, $config['rows_per_page'], $config['pager_items'], $pager, $_REQUEST['order_by']);
        if (!$rows && $dbconn->db_lasterror())
            dbu_handle_error($dbconn->db_lasterror());
        $show_data = true;
        break;
    case 'i':
        $row = dbu_get_input_defaults($fielddef);
        $nextmode = 'i2';
        $show_input = true;
        break;
    case 'i2':
        $rslt = dbu_handle_insert($fielddef, $table, $dbconn, $_POST);
        if ($rslt) {
            $show_message = true;
            $message = MSG_INSERTED;
        } else {
            dbu_handle_error($dbconn->db_lasterror());
        }
        $dbconn->db_close();
        break;
    case 'u':
        $row = dbu_fetch_by_key($fielddef, $table, $dbconn, $_GET, $keys);
        $nextmode = 'u2';
        $show_input = true;
        break;
    case 'u2':
        $rslt = dbu_handle_update($fielddef, $table, $dbconn, $_POST, $keys);
        if ($rslt) {
            $show_message = true;
            $message = sprintf(MSG_UPDATED, $start);
        } else {
            dbu_handle_error($dbconn->db_lasterror());
        }
        $dbconn->db_close();
        $nextmode = 's';
        break;
    case 'd':
        $rslt = dbu_handle_delete($fielddef, $table, $dbconn, $_GET, $keys);
        if ($rslt) {
            $show_message = false;
            $message = sprintf(MSG_DELETED, $start);
            
            $pager=array();
            $start = is_numeric($_GET[INP_START]) ? (int)$_GET[INP_START] : 0;
            $rows = dbu_handle_select($fielddef, $table, $dbconn, $keys, $start,
                                      $config['rows_per_page'], $config['pager_items'],
                                      $pager, $_REQUEST['order_by']);
            if (!$rows && $dbconn->db_lasterror())
             dbu_handle_error($dbconn->db_lasterror());
             $show_data = true;
        } else {
            dbu_handle_error($dbconn->db_lasterror());
        }
        $dbconn->db_close();
        $nextmode = 's';
        break;
}

?>
<?php
    if ($show_message) {
?>
<table cellpadding="1" cellspacing="0" border="0" bgcolor="#ababab"><tr><td>
<table cellpadding="0" cellspacing="1" border="0" bgcolor="#ffffff"><tr><td>
    <?php echo $message?>
</table>
</td></tr>
</table>

<?php
    } else if ($show_input) {
?>

<form name="InputForm" method="post" enctype="multipart-form-data"
    onsubmit="return CheckForm(this)"
    action="table_tbllob.php">
<table border="0">
    <?  // INPUT
        foreach($fielddef as $fkey=>$fld) {
            if ($fld[FLD_INPUT]) {
                echo "<tr><td>$fld[FLD_DISPLAY]</td>";
                $val = htmlentities($row[$fkey], ENT_QUOTES, $config['encoding']);
                switch ($fld[FLD_INPUT_TYPE]) {
                    case "textarea":
                        echo "<td><textarea name=\"$fkey\" cols=\"$fld[FLD_INPUT_SZ]\" rows=\"15\">$val</textarea></td></tr>";
                        break;
                    case "hidden":
                        echo "<td><input name=\"$fkey\" type=\"$fld[FLD_INPUT_TYPE]\" value=\"$val\" /></td></tr>";
                        break;
                    case "select":
                        echo "<td>". WriteCombo(${$fkey . '_values'}, $fkey, "") ."</td></tr>";
                        break;
                    default:
                        echo "<td><input name=\"$fkey\" type=\"$fld[FLD_INPUT_TYPE]\" size=\"$fld[FLD_INPUT_SZ]\" maxlength=\"$fld[FLD_INPUT_MAXLEN]\" value=\"$val\" /></td></tr>";
                }
            }
        }
    ?>
<tr>
    <td>&nbsp;</td>
    <td><input type="submit" value="Save" /></td>
</tr>
</table>
<input type="hidden" name="mode" value="<?php echo $nextmode;?>" />
    <?php // KEY
        if(isset($_GET[RKEY])) {
            $key = $_GET[RKEY];
            if (get_magic_quotes_gpc())
                $key = stripslashes($key);
            echo "<input type='hidden' name='".RKEY."' value='".htmlentities($key, ENT_QUOTES, $config['encoding'])."' />";
        }
    ?>
</form>
<? } else if ($show_data) {
    
echo "<table cellpadding=\"1\" cellspacing=\"0\" border=\"0\" bgcolor=\"#ababab\"><tr><td>";
echo "<table cellpadding=\"0\" cellspacing=\"1\" border=\"0\" class=\"datatable\">";
echo "<tr><th style=\"width: 25px;\"></th>";
// DATA HEADER
        foreach ($fielddef as $fkey=>$fld) {
            if ($fld[FLD_DISPLAY]) {
                $wd = isset($fld[FLD_DISPLAY_SZ]) ? " style=\"width: $fld[FLD_DISPLAY_SZ]ex\"" : "";
                echo "<th$wd> <input type=button onClick = 'ajaxFunctionForm(\"".$fkey."\",".$start.")' name='".$fkey."' value='"; 
                echo (htmlentities($fld[FLD_DISPLAY], ENT_QUOTES, $config['encoding']) . "' /></th>");
            }
        }
    ?>
</tr>
    <?  // DATA
        $checked = ' checked="checked"';
        $i = 0;
        foreach($rows as $row) {
            $bk = $i++ % 2 ? "" : ' class="sublight"';
            echo "<tr$bk><td><input type='radio'$checked name='".RKEY."' value='".htmlentities($row[RKEY], ENT_QUOTES, $config['encoding'])."' /></td>";
            foreach ($fielddef as $fkey=>$fld) {
                if ($fld[FLD_VISIBLE]) {
                    $value =  htmlentities($row[$fkey], ENT_QUOTES, $config['encoding']);
                    if (!isset($value))
                        $value = "&nbsp;";
                    echo "<td>$value</td>";
                }
            }
            echo "</tr>\n";
            $checked = '';
        }
    ?>
</table>
</td></tr></table><br />
    <? // PAGER
        if (isset($pager[PG_PAGES])) {
            if (isset($pager[PG_PAGE_PREV])) {
                echo "<a href=\"javascript: ajaxFunctionForm('".$order_by."',".$pager[PG_PAGE_PREV].")\"/>Prev&nbsp</a>";
            } else {
                echo "Prev&nbsp;";
            }
            foreach($pager[PG_PAGES] as $pg => $st) {
                if ($st != $start) {
                    echo "<a href=\"javascript: ajaxFunctionForm('".$order_by."',".$st.")\"/>".$pg."&nbsp</a>";
                } else {
                    echo "<b>$pg</b>&nbsp;";
                }
            }
            if (isset($pager[PG_PAGE_NEXT])) {
                echo "<a href=\"javascript: ajaxFunctionForm('".$order_by."',".$pager[PG_PAGE_NEXT].")\"/>Next</a>";
            } else {
                echo "Next&nbsp;";
            }
            echo "<br />";
        }
    ?>
<br />


<? } ?>
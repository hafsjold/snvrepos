#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3625
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace nsPuls3060
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="dbData3060")]
	public partial class DbData3060 : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTblaftalelin(Tblaftalelin instance);
    partial void UpdateTblaftalelin(Tblaftalelin instance);
    partial void DeleteTblaftalelin(Tblaftalelin instance);
    partial void InsertTblAktivitet(TblAktivitet instance);
    partial void UpdateTblAktivitet(TblAktivitet instance);
    partial void DeleteTblAktivitet(TblAktivitet instance);
    partial void InsertTblbet(Tblbet instance);
    partial void UpdateTblbet(Tblbet instance);
    partial void DeleteTblbet(Tblbet instance);
    partial void InsertTblbetlin(Tblbetlin instance);
    partial void UpdateTblbetlin(Tblbetlin instance);
    partial void DeleteTblbetlin(Tblbetlin instance);
    partial void InsertTblfak(Tblfak instance);
    partial void UpdateTblfak(Tblfak instance);
    partial void DeleteTblfak(Tblfak instance);
    partial void InsertTblfrapbs(Tblfrapbs instance);
    partial void UpdateTblfrapbs(Tblfrapbs instance);
    partial void DeleteTblfrapbs(Tblfrapbs instance);
    partial void InsertTblindbetalingskort(Tblindbetalingskort instance);
    partial void UpdateTblindbetalingskort(Tblindbetalingskort instance);
    partial void DeleteTblindbetalingskort(Tblindbetalingskort instance);
    partial void InsertTblinfotekst(Tblinfotekst instance);
    partial void UpdateTblinfotekst(Tblinfotekst instance);
    partial void DeleteTblinfotekst(Tblinfotekst instance);
    partial void InsertTblKontingent(TblKontingent instance);
    partial void UpdateTblKontingent(TblKontingent instance);
    partial void DeleteTblKontingent(TblKontingent instance);
    partial void InsertTblkreditor(Tblkreditor instance);
    partial void UpdateTblkreditor(Tblkreditor instance);
    partial void DeleteTblkreditor(Tblkreditor instance);
    partial void InsertTblMedlem(TblMedlem instance);
    partial void UpdateTblMedlem(TblMedlem instance);
    partial void DeleteTblMedlem(TblMedlem instance);
    partial void InsertTblMedlemLog(TblMedlemLog instance);
    partial void UpdateTblMedlemLog(TblMedlemLog instance);
    partial void DeleteTblMedlemLog(TblMedlemLog instance);
    partial void InsertTblnrserie(Tblnrserie instance);
    partial void UpdateTblnrserie(Tblnrserie instance);
    partial void DeleteTblnrserie(Tblnrserie instance);
    partial void InsertTbloverforsel(Tbloverforsel instance);
    partial void UpdateTbloverforsel(Tbloverforsel instance);
    partial void DeleteTbloverforsel(Tbloverforsel instance);
    partial void InsertTblpbsfile(Tblpbsfile instance);
    partial void UpdateTblpbsfile(Tblpbsfile instance);
    partial void DeleteTblpbsfile(Tblpbsfile instance);
    partial void InsertTblpbsfiles(Tblpbsfiles instance);
    partial void UpdateTblpbsfiles(Tblpbsfiles instance);
    partial void DeleteTblpbsfiles(Tblpbsfiles instance);
    partial void InsertTblpbsforsendelse(Tblpbsforsendelse instance);
    partial void UpdateTblpbsforsendelse(Tblpbsforsendelse instance);
    partial void DeleteTblpbsforsendelse(Tblpbsforsendelse instance);
    partial void InsertTblpbsnetdir(Tblpbsnetdir instance);
    partial void UpdateTblpbsnetdir(Tblpbsnetdir instance);
    partial void DeleteTblpbsnetdir(Tblpbsnetdir instance);
    partial void InsertTblRegnskab(TblRegnskab instance);
    partial void UpdateTblRegnskab(TblRegnskab instance);
    partial void DeleteTblRegnskab(TblRegnskab instance);
    partial void InsertTblrykker(Tblrykker instance);
    partial void UpdateTblrykker(Tblrykker instance);
    partial void DeleteTblrykker(Tblrykker instance);
    partial void InsertTblsftp(Tblsftp instance);
    partial void UpdateTblsftp(Tblsftp instance);
    partial void DeleteTblsftp(Tblsftp instance);
    partial void InsertTblsync(Tblsync instance);
    partial void UpdateTblsync(Tblsync instance);
    partial void DeleteTblsync(Tblsync instance);
    partial void InsertTblSysinfo(TblSysinfo instance);
    partial void UpdateTblSysinfo(TblSysinfo instance);
    partial void DeleteTblSysinfo(TblSysinfo instance);
    partial void InsertTbltilpbs(Tbltilpbs instance);
    partial void UpdateTbltilpbs(Tbltilpbs instance);
    partial void DeleteTbltilpbs(Tbltilpbs instance);
    partial void InsertTempBetalforslag(TempBetalforslag instance);
    partial void UpdateTempBetalforslag(TempBetalforslag instance);
    partial void DeleteTempBetalforslag(TempBetalforslag instance);
    partial void InsertTempBetalforslaglinie(TempBetalforslaglinie instance);
    partial void UpdateTempBetalforslaglinie(TempBetalforslaglinie instance);
    partial void DeleteTempBetalforslaglinie(TempBetalforslaglinie instance);
    partial void InsertTempKontforslag(TempKontforslag instance);
    partial void UpdateTempKontforslag(TempKontforslag instance);
    partial void DeleteTempKontforslag(TempKontforslag instance);
    partial void InsertTempKontforslaglinie(TempKontforslaglinie instance);
    partial void UpdateTempKontforslaglinie(TempKontforslaglinie instance);
    partial void DeleteTempKontforslaglinie(TempKontforslaglinie instance);
    partial void InsertTempRykkerforslag(TempRykkerforslag instance);
    partial void UpdateTempRykkerforslag(TempRykkerforslag instance);
    partial void DeleteTempRykkerforslag(TempRykkerforslag instance);
    partial void InsertTempRykkerforslaglinie(TempRykkerforslaglinie instance);
    partial void UpdateTempRykkerforslaglinie(TempRykkerforslaglinie instance);
    partial void DeleteTempRykkerforslaglinie(TempRykkerforslaglinie instance);
    #endregion
		
		public DbData3060(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbData3060(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbData3060(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbData3060(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Tblaftalelin> Tblaftalelin
		{
			get
			{
				return this.GetTable<Tblaftalelin>();
			}
		}
		
		public System.Data.Linq.Table<TblAktivitet> TblAktivitet
		{
			get
			{
				return this.GetTable<TblAktivitet>();
			}
		}
		
		public System.Data.Linq.Table<Tblbet> Tblbet
		{
			get
			{
				return this.GetTable<Tblbet>();
			}
		}
		
		public System.Data.Linq.Table<Tblbetlin> Tblbetlin
		{
			get
			{
				return this.GetTable<Tblbetlin>();
			}
		}
		
		public System.Data.Linq.Table<Tblfak> Tblfak
		{
			get
			{
				return this.GetTable<Tblfak>();
			}
		}
		
		public System.Data.Linq.Table<Tblfrapbs> Tblfrapbs
		{
			get
			{
				return this.GetTable<Tblfrapbs>();
			}
		}
		
		public System.Data.Linq.Table<Tblindbetalingskort> Tblindbetalingskort
		{
			get
			{
				return this.GetTable<Tblindbetalingskort>();
			}
		}
		
		public System.Data.Linq.Table<Tblinfotekst> Tblinfotekst
		{
			get
			{
				return this.GetTable<Tblinfotekst>();
			}
		}
		
		public System.Data.Linq.Table<TblKontingent> TblKontingent
		{
			get
			{
				return this.GetTable<TblKontingent>();
			}
		}
		
		public System.Data.Linq.Table<Tblkreditor> Tblkreditor
		{
			get
			{
				return this.GetTable<Tblkreditor>();
			}
		}
		
		public System.Data.Linq.Table<TblMedlem> TblMedlem
		{
			get
			{
				return this.GetTable<TblMedlem>();
			}
		}
		
		public System.Data.Linq.Table<TblMedlemLog> TblMedlemLog
		{
			get
			{
				return this.GetTable<TblMedlemLog>();
			}
		}
		
		public System.Data.Linq.Table<Tblnrserie> Tblnrserie
		{
			get
			{
				return this.GetTable<Tblnrserie>();
			}
		}
		
		public System.Data.Linq.Table<Tbloverforsel> Tbloverforsel
		{
			get
			{
				return this.GetTable<Tbloverforsel>();
			}
		}
		
		public System.Data.Linq.Table<Tblpbsfile> Tblpbsfile
		{
			get
			{
				return this.GetTable<Tblpbsfile>();
			}
		}
		
		public System.Data.Linq.Table<Tblpbsfiles> Tblpbsfiles
		{
			get
			{
				return this.GetTable<Tblpbsfiles>();
			}
		}
		
		public System.Data.Linq.Table<Tblpbsforsendelse> Tblpbsforsendelse
		{
			get
			{
				return this.GetTable<Tblpbsforsendelse>();
			}
		}
		
		public System.Data.Linq.Table<Tblpbsnetdir> Tblpbsnetdir
		{
			get
			{
				return this.GetTable<Tblpbsnetdir>();
			}
		}
		
		public System.Data.Linq.Table<TblRegnskab> TblRegnskab
		{
			get
			{
				return this.GetTable<TblRegnskab>();
			}
		}
		
		public System.Data.Linq.Table<Tblrykker> Tblrykker
		{
			get
			{
				return this.GetTable<Tblrykker>();
			}
		}
		
		public System.Data.Linq.Table<Tblsftp> Tblsftp
		{
			get
			{
				return this.GetTable<Tblsftp>();
			}
		}
		
		public System.Data.Linq.Table<Tblsync> Tblsync
		{
			get
			{
				return this.GetTable<Tblsync>();
			}
		}
		
		public System.Data.Linq.Table<TblSysinfo> TblSysinfo
		{
			get
			{
				return this.GetTable<TblSysinfo>();
			}
		}
		
		public System.Data.Linq.Table<Tbltilpbs> Tbltilpbs
		{
			get
			{
				return this.GetTable<Tbltilpbs>();
			}
		}
		
		public System.Data.Linq.Table<TempBetalforslag> TempBetalforslag
		{
			get
			{
				return this.GetTable<TempBetalforslag>();
			}
		}
		
		public System.Data.Linq.Table<TempBetalforslaglinie> TempBetalforslaglinie
		{
			get
			{
				return this.GetTable<TempBetalforslaglinie>();
			}
		}
		
		public System.Data.Linq.Table<TempKontforslag> TempKontforslag
		{
			get
			{
				return this.GetTable<TempKontforslag>();
			}
		}
		
		public System.Data.Linq.Table<TempKontforslaglinie> TempKontforslaglinie
		{
			get
			{
				return this.GetTable<TempKontforslaglinie>();
			}
		}
		
		public System.Data.Linq.Table<TempRykkerforslag> TempRykkerforslag
		{
			get
			{
				return this.GetTable<TempRykkerforslag>();
			}
		}
		
		public System.Data.Linq.Table<TempRykkerforslaglinie> TempRykkerforslaglinie
		{
			get
			{
				return this.GetTable<TempRykkerforslaglinie>();
			}
		}
	}
	
	[Table(Name="tblaftalelin")]
	public partial class Tblaftalelin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Frapbsid;
		
		private string _Pbstranskode;
		
		private int _Nr;
		
		private string _Debitorkonto;
		
		private string _Debgrpnr;
		
		private System.Nullable<int> _Aftalenr;
		
		private System.Nullable<System.DateTime> _Aftalestartdato;
		
		private System.Nullable<System.DateTime> _Aftaleslutdato;
		
		private string _Pbssektionnr;
		
		private EntityRef<Tblfrapbs> _Tblfrapbs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFrapbsidChanging(int value);
    partial void OnFrapbsidChanged();
    partial void OnPbstranskodeChanging(string value);
    partial void OnPbstranskodeChanged();
    partial void OnNrChanging(int value);
    partial void OnNrChanged();
    partial void OnDebitorkontoChanging(string value);
    partial void OnDebitorkontoChanged();
    partial void OnDebgrpnrChanging(string value);
    partial void OnDebgrpnrChanged();
    partial void OnAftalenrChanging(System.Nullable<int> value);
    partial void OnAftalenrChanged();
    partial void OnAftalestartdatoChanging(System.Nullable<System.DateTime> value);
    partial void OnAftalestartdatoChanged();
    partial void OnAftaleslutdatoChanging(System.Nullable<System.DateTime> value);
    partial void OnAftaleslutdatoChanged();
    partial void OnPbssektionnrChanging(string value);
    partial void OnPbssektionnrChanged();
    #endregion
		
		public Tblaftalelin()
		{
			this._Tblfrapbs = default(EntityRef<Tblfrapbs>);
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="frapbsid", Storage="_Frapbsid", DbType="Int NOT NULL")]
		public int Frapbsid
		{
			get
			{
				return this._Frapbsid;
			}
			set
			{
				if ((this._Frapbsid != value))
				{
					this.OnFrapbsidChanging(value);
					this.SendPropertyChanging();
					this._Frapbsid = value;
					this.SendPropertyChanged("Frapbsid");
					this.OnFrapbsidChanged();
				}
			}
		}
		
		[Column(Name="pbstranskode", Storage="_Pbstranskode", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string Pbstranskode
		{
			get
			{
				return this._Pbstranskode;
			}
			set
			{
				if ((this._Pbstranskode != value))
				{
					this.OnPbstranskodeChanging(value);
					this.SendPropertyChanging();
					this._Pbstranskode = value;
					this.SendPropertyChanged("Pbstranskode");
					this.OnPbstranskodeChanged();
				}
			}
		}
		
		[Column(Storage="_Nr", DbType="Int NOT NULL")]
		public int Nr
		{
			get
			{
				return this._Nr;
			}
			set
			{
				if ((this._Nr != value))
				{
					this.OnNrChanging(value);
					this.SendPropertyChanging();
					this._Nr = value;
					this.SendPropertyChanged("Nr");
					this.OnNrChanged();
				}
			}
		}
		
		[Column(Name="debitorkonto", Storage="_Debitorkonto", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Debitorkonto
		{
			get
			{
				return this._Debitorkonto;
			}
			set
			{
				if ((this._Debitorkonto != value))
				{
					this.OnDebitorkontoChanging(value);
					this.SendPropertyChanging();
					this._Debitorkonto = value;
					this.SendPropertyChanged("Debitorkonto");
					this.OnDebitorkontoChanged();
				}
			}
		}
		
		[Column(Name="debgrpnr", Storage="_Debgrpnr", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Debgrpnr
		{
			get
			{
				return this._Debgrpnr;
			}
			set
			{
				if ((this._Debgrpnr != value))
				{
					this.OnDebgrpnrChanging(value);
					this.SendPropertyChanging();
					this._Debgrpnr = value;
					this.SendPropertyChanged("Debgrpnr");
					this.OnDebgrpnrChanged();
				}
			}
		}
		
		[Column(Name="aftalenr", Storage="_Aftalenr", DbType="Int")]
		public System.Nullable<int> Aftalenr
		{
			get
			{
				return this._Aftalenr;
			}
			set
			{
				if ((this._Aftalenr != value))
				{
					this.OnAftalenrChanging(value);
					this.SendPropertyChanging();
					this._Aftalenr = value;
					this.SendPropertyChanged("Aftalenr");
					this.OnAftalenrChanged();
				}
			}
		}
		
		[Column(Name="aftalestartdato", Storage="_Aftalestartdato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Aftalestartdato
		{
			get
			{
				return this._Aftalestartdato;
			}
			set
			{
				if ((this._Aftalestartdato != value))
				{
					this.OnAftalestartdatoChanging(value);
					this.SendPropertyChanging();
					this._Aftalestartdato = value;
					this.SendPropertyChanged("Aftalestartdato");
					this.OnAftalestartdatoChanged();
				}
			}
		}
		
		[Column(Name="aftaleslutdato", Storage="_Aftaleslutdato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Aftaleslutdato
		{
			get
			{
				return this._Aftaleslutdato;
			}
			set
			{
				if ((this._Aftaleslutdato != value))
				{
					this.OnAftaleslutdatoChanging(value);
					this.SendPropertyChanging();
					this._Aftaleslutdato = value;
					this.SendPropertyChanged("Aftaleslutdato");
					this.OnAftaleslutdatoChanged();
				}
			}
		}
		
		[Column(Name="pbssektionnr", Storage="_Pbssektionnr", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Pbssektionnr
		{
			get
			{
				return this._Pbssektionnr;
			}
			set
			{
				if ((this._Pbssektionnr != value))
				{
					this.OnPbssektionnrChanging(value);
					this.SendPropertyChanging();
					this._Pbssektionnr = value;
					this.SendPropertyChanged("Pbssektionnr");
					this.OnPbssektionnrChanged();
				}
			}
		}
		
		[Association(Name="Tblfrapbs_Tblaftalelin", Storage="_Tblfrapbs", ThisKey="Frapbsid", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public Tblfrapbs Tblfrapbs
		{
			get
			{
				return this._Tblfrapbs.Entity;
			}
			set
			{
				Tblfrapbs previousValue = this._Tblfrapbs.Entity;
				if (((previousValue != value) 
							|| (this._Tblfrapbs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tblfrapbs.Entity = null;
						previousValue.Tblaftalelin.Remove(this);
					}
					this._Tblfrapbs.Entity = value;
					if ((value != null))
					{
						value.Tblaftalelin.Add(this);
						this._Frapbsid = value.Id;
					}
					else
					{
						this._Frapbsid = default(int);
					}
					this.SendPropertyChanged("Tblfrapbs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="tblAktivitet")]
	public partial class TblAktivitet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Akt_tekst;
		
		private EntitySet<TblMedlemLog> _TblMedlemLog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAkt_tekstChanging(string value);
    partial void OnAkt_tekstChanged();
    #endregion
		
		public TblAktivitet()
		{
			this._TblMedlemLog = new EntitySet<TblMedlemLog>(new Action<TblMedlemLog>(this.attach_TblMedlemLog), new Action<TblMedlemLog>(this.detach_TblMedlemLog));
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="akt_tekst", Storage="_Akt_tekst", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Akt_tekst
		{
			get
			{
				return this._Akt_tekst;
			}
			set
			{
				if ((this._Akt_tekst != value))
				{
					this.OnAkt_tekstChanging(value);
					this.SendPropertyChanging();
					this._Akt_tekst = value;
					this.SendPropertyChanged("Akt_tekst");
					this.OnAkt_tekstChanged();
				}
			}
		}
		
		[Association(Name="TblAktivitet_TblMedlemLog", Storage="_TblMedlemLog", ThisKey="Id", OtherKey="Akt_id")]
		public EntitySet<TblMedlemLog> TblMedlemLog
		{
			get
			{
				return this._TblMedlemLog;
			}
			set
			{
				this._TblMedlemLog.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblMedlemLog(TblMedlemLog entity)
		{
			this.SendPropertyChanging();
			entity.TblAktivitet = this;
		}
		
		private void detach_TblMedlemLog(TblMedlemLog entity)
		{
			this.SendPropertyChanging();
			entity.TblAktivitet = null;
		}
	}
	
	[Table(Name="tblbet")]
	public partial class Tblbet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Frapbsid;
		
		private string _Pbssektionnr;
		
		private string _Transkode;
		
		private System.Nullable<System.DateTime> _Bogforingsdato;
		
		private System.Nullable<decimal> _Indbetalingsbelob;
		
		private System.Nullable<bool> _Summabogfort;
		
		private EntitySet<Tblbetlin> _Tblbetlin;
		
		private EntityRef<Tblfrapbs> _Tblfrapbs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFrapbsidChanging(System.Nullable<int> value);
    partial void OnFrapbsidChanged();
    partial void OnPbssektionnrChanging(string value);
    partial void OnPbssektionnrChanged();
    partial void OnTranskodeChanging(string value);
    partial void OnTranskodeChanged();
    partial void OnBogforingsdatoChanging(System.Nullable<System.DateTime> value);
    partial void OnBogforingsdatoChanged();
    partial void OnIndbetalingsbelobChanging(System.Nullable<decimal> value);
    partial void OnIndbetalingsbelobChanged();
    partial void OnSummabogfortChanging(System.Nullable<bool> value);
    partial void OnSummabogfortChanged();
    #endregion
		
		public Tblbet()
		{
			this._Tblbetlin = new EntitySet<Tblbetlin>(new Action<Tblbetlin>(this.attach_Tblbetlin), new Action<Tblbetlin>(this.detach_Tblbetlin));
			this._Tblfrapbs = default(EntityRef<Tblfrapbs>);
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="frapbsid", Storage="_Frapbsid", DbType="Int")]
		public System.Nullable<int> Frapbsid
		{
			get
			{
				return this._Frapbsid;
			}
			set
			{
				if ((this._Frapbsid != value))
				{
					this.OnFrapbsidChanging(value);
					this.SendPropertyChanging();
					this._Frapbsid = value;
					this.SendPropertyChanged("Frapbsid");
					this.OnFrapbsidChanged();
				}
			}
		}
		
		[Column(Name="pbssektionnr", Storage="_Pbssektionnr", DbType="NVarChar(4)")]
		public string Pbssektionnr
		{
			get
			{
				return this._Pbssektionnr;
			}
			set
			{
				if ((this._Pbssektionnr != value))
				{
					this.OnPbssektionnrChanging(value);
					this.SendPropertyChanging();
					this._Pbssektionnr = value;
					this.SendPropertyChanged("Pbssektionnr");
					this.OnPbssektionnrChanged();
				}
			}
		}
		
		[Column(Name="transkode", Storage="_Transkode", DbType="NVarChar(4)")]
		public string Transkode
		{
			get
			{
				return this._Transkode;
			}
			set
			{
				if ((this._Transkode != value))
				{
					this.OnTranskodeChanging(value);
					this.SendPropertyChanging();
					this._Transkode = value;
					this.SendPropertyChanged("Transkode");
					this.OnTranskodeChanged();
				}
			}
		}
		
		[Column(Name="bogforingsdato", Storage="_Bogforingsdato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Bogforingsdato
		{
			get
			{
				return this._Bogforingsdato;
			}
			set
			{
				if ((this._Bogforingsdato != value))
				{
					this.OnBogforingsdatoChanging(value);
					this.SendPropertyChanging();
					this._Bogforingsdato = value;
					this.SendPropertyChanged("Bogforingsdato");
					this.OnBogforingsdatoChanged();
				}
			}
		}
		
		[Column(Name="indbetalingsbelob", Storage="_Indbetalingsbelob", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Indbetalingsbelob
		{
			get
			{
				return this._Indbetalingsbelob;
			}
			set
			{
				if ((this._Indbetalingsbelob != value))
				{
					this.OnIndbetalingsbelobChanging(value);
					this.SendPropertyChanging();
					this._Indbetalingsbelob = value;
					this.SendPropertyChanged("Indbetalingsbelob");
					this.OnIndbetalingsbelobChanged();
				}
			}
		}
		
		[Column(Name="summabogfort", Storage="_Summabogfort", DbType="Bit")]
		public System.Nullable<bool> Summabogfort
		{
			get
			{
				return this._Summabogfort;
			}
			set
			{
				if ((this._Summabogfort != value))
				{
					this.OnSummabogfortChanging(value);
					this.SendPropertyChanging();
					this._Summabogfort = value;
					this.SendPropertyChanged("Summabogfort");
					this.OnSummabogfortChanged();
				}
			}
		}
		
		[Association(Name="Tblbet_Tblbetlin", Storage="_Tblbetlin", ThisKey="Id", OtherKey="Betid")]
		public EntitySet<Tblbetlin> Tblbetlin
		{
			get
			{
				return this._Tblbetlin;
			}
			set
			{
				this._Tblbetlin.Assign(value);
			}
		}
		
		[Association(Name="Tblfrapbs_Tblbet", Storage="_Tblfrapbs", ThisKey="Frapbsid", OtherKey="Id", IsForeignKey=true)]
		public Tblfrapbs Tblfrapbs
		{
			get
			{
				return this._Tblfrapbs.Entity;
			}
			set
			{
				Tblfrapbs previousValue = this._Tblfrapbs.Entity;
				if (((previousValue != value) 
							|| (this._Tblfrapbs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tblfrapbs.Entity = null;
						previousValue.Tblbet.Remove(this);
					}
					this._Tblfrapbs.Entity = value;
					if ((value != null))
					{
						value.Tblbet.Add(this);
						this._Frapbsid = value.Id;
					}
					else
					{
						this._Frapbsid = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tblfrapbs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tblbetlin(Tblbetlin entity)
		{
			this.SendPropertyChanging();
			entity.Tblbet = this;
		}
		
		private void detach_Tblbetlin(Tblbetlin entity)
		{
			this.SendPropertyChanging();
			entity.Tblbet = null;
		}
	}
	
	[Table(Name="tblbetlin")]
	public partial class Tblbetlin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Betid;
		
		private string _Pbssektionnr;
		
		private string _Pbstranskode;
		
		private System.Nullable<int> _Nr;
		
		private System.Nullable<int> _Faknr;
		
		private string _Debitorkonto;
		
		private System.Nullable<int> _Aftalenr;
		
		private System.Nullable<System.DateTime> _Betalingsdato;
		
		private System.Nullable<decimal> _Belob;
		
		private System.Nullable<System.DateTime> _Indbetalingsdato;
		
		private System.Nullable<System.DateTime> _Bogforingsdato;
		
		private System.Nullable<decimal> _Indbetalingsbelob;
		
		private string _Pbskortart;
		
		private System.Nullable<decimal> _Pbsgebyrbelob;
		
		private string _Pbsarkivnr;
		
		private EntityRef<Tblbet> _Tblbet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBetidChanging(System.Nullable<int> value);
    partial void OnBetidChanged();
    partial void OnPbssektionnrChanging(string value);
    partial void OnPbssektionnrChanged();
    partial void OnPbstranskodeChanging(string value);
    partial void OnPbstranskodeChanged();
    partial void OnNrChanging(System.Nullable<int> value);
    partial void OnNrChanged();
    partial void OnFaknrChanging(System.Nullable<int> value);
    partial void OnFaknrChanged();
    partial void OnDebitorkontoChanging(string value);
    partial void OnDebitorkontoChanged();
    partial void OnAftalenrChanging(System.Nullable<int> value);
    partial void OnAftalenrChanged();
    partial void OnBetalingsdatoChanging(System.Nullable<System.DateTime> value);
    partial void OnBetalingsdatoChanged();
    partial void OnBelobChanging(System.Nullable<decimal> value);
    partial void OnBelobChanged();
    partial void OnIndbetalingsdatoChanging(System.Nullable<System.DateTime> value);
    partial void OnIndbetalingsdatoChanged();
    partial void OnBogforingsdatoChanging(System.Nullable<System.DateTime> value);
    partial void OnBogforingsdatoChanged();
    partial void OnIndbetalingsbelobChanging(System.Nullable<decimal> value);
    partial void OnIndbetalingsbelobChanged();
    partial void OnPbskortartChanging(string value);
    partial void OnPbskortartChanged();
    partial void OnPbsgebyrbelobChanging(System.Nullable<decimal> value);
    partial void OnPbsgebyrbelobChanged();
    partial void OnPbsarkivnrChanging(string value);
    partial void OnPbsarkivnrChanged();
    #endregion
		
		public Tblbetlin()
		{
			this._Tblbet = default(EntityRef<Tblbet>);
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="betid", Storage="_Betid", DbType="Int")]
		public System.Nullable<int> Betid
		{
			get
			{
				return this._Betid;
			}
			set
			{
				if ((this._Betid != value))
				{
					this.OnBetidChanging(value);
					this.SendPropertyChanging();
					this._Betid = value;
					this.SendPropertyChanged("Betid");
					this.OnBetidChanged();
				}
			}
		}
		
		[Column(Name="pbssektionnr", Storage="_Pbssektionnr", DbType="NVarChar(4)")]
		public string Pbssektionnr
		{
			get
			{
				return this._Pbssektionnr;
			}
			set
			{
				if ((this._Pbssektionnr != value))
				{
					this.OnPbssektionnrChanging(value);
					this.SendPropertyChanging();
					this._Pbssektionnr = value;
					this.SendPropertyChanged("Pbssektionnr");
					this.OnPbssektionnrChanged();
				}
			}
		}
		
		[Column(Name="pbstranskode", Storage="_Pbstranskode", DbType="NVarChar(4)")]
		public string Pbstranskode
		{
			get
			{
				return this._Pbstranskode;
			}
			set
			{
				if ((this._Pbstranskode != value))
				{
					this.OnPbstranskodeChanging(value);
					this.SendPropertyChanging();
					this._Pbstranskode = value;
					this.SendPropertyChanged("Pbstranskode");
					this.OnPbstranskodeChanged();
				}
			}
		}
		
		[Column(Storage="_Nr", DbType="Int")]
		public System.Nullable<int> Nr
		{
			get
			{
				return this._Nr;
			}
			set
			{
				if ((this._Nr != value))
				{
					this.OnNrChanging(value);
					this.SendPropertyChanging();
					this._Nr = value;
					this.SendPropertyChanged("Nr");
					this.OnNrChanged();
				}
			}
		}
		
		[Column(Name="faknr", Storage="_Faknr", DbType="Int")]
		public System.Nullable<int> Faknr
		{
			get
			{
				return this._Faknr;
			}
			set
			{
				if ((this._Faknr != value))
				{
					this.OnFaknrChanging(value);
					this.SendPropertyChanging();
					this._Faknr = value;
					this.SendPropertyChanged("Faknr");
					this.OnFaknrChanged();
				}
			}
		}
		
		[Column(Name="debitorkonto", Storage="_Debitorkonto", DbType="NVarChar(15)")]
		public string Debitorkonto
		{
			get
			{
				return this._Debitorkonto;
			}
			set
			{
				if ((this._Debitorkonto != value))
				{
					this.OnDebitorkontoChanging(value);
					this.SendPropertyChanging();
					this._Debitorkonto = value;
					this.SendPropertyChanged("Debitorkonto");
					this.OnDebitorkontoChanged();
				}
			}
		}
		
		[Column(Name="aftalenr", Storage="_Aftalenr", DbType="Int")]
		public System.Nullable<int> Aftalenr
		{
			get
			{
				return this._Aftalenr;
			}
			set
			{
				if ((this._Aftalenr != value))
				{
					this.OnAftalenrChanging(value);
					this.SendPropertyChanging();
					this._Aftalenr = value;
					this.SendPropertyChanged("Aftalenr");
					this.OnAftalenrChanged();
				}
			}
		}
		
		[Column(Name="betalingsdato", Storage="_Betalingsdato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Betalingsdato
		{
			get
			{
				return this._Betalingsdato;
			}
			set
			{
				if ((this._Betalingsdato != value))
				{
					this.OnBetalingsdatoChanging(value);
					this.SendPropertyChanging();
					this._Betalingsdato = value;
					this.SendPropertyChanged("Betalingsdato");
					this.OnBetalingsdatoChanged();
				}
			}
		}
		
		[Column(Name="belob", Storage="_Belob", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Belob
		{
			get
			{
				return this._Belob;
			}
			set
			{
				if ((this._Belob != value))
				{
					this.OnBelobChanging(value);
					this.SendPropertyChanging();
					this._Belob = value;
					this.SendPropertyChanged("Belob");
					this.OnBelobChanged();
				}
			}
		}
		
		[Column(Name="indbetalingsdato", Storage="_Indbetalingsdato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Indbetalingsdato
		{
			get
			{
				return this._Indbetalingsdato;
			}
			set
			{
				if ((this._Indbetalingsdato != value))
				{
					this.OnIndbetalingsdatoChanging(value);
					this.SendPropertyChanging();
					this._Indbetalingsdato = value;
					this.SendPropertyChanged("Indbetalingsdato");
					this.OnIndbetalingsdatoChanged();
				}
			}
		}
		
		[Column(Name="bogforingsdato", Storage="_Bogforingsdato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Bogforingsdato
		{
			get
			{
				return this._Bogforingsdato;
			}
			set
			{
				if ((this._Bogforingsdato != value))
				{
					this.OnBogforingsdatoChanging(value);
					this.SendPropertyChanging();
					this._Bogforingsdato = value;
					this.SendPropertyChanged("Bogforingsdato");
					this.OnBogforingsdatoChanged();
				}
			}
		}
		
		[Column(Name="indbetalingsbelob", Storage="_Indbetalingsbelob", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Indbetalingsbelob
		{
			get
			{
				return this._Indbetalingsbelob;
			}
			set
			{
				if ((this._Indbetalingsbelob != value))
				{
					this.OnIndbetalingsbelobChanging(value);
					this.SendPropertyChanging();
					this._Indbetalingsbelob = value;
					this.SendPropertyChanged("Indbetalingsbelob");
					this.OnIndbetalingsbelobChanged();
				}
			}
		}
		
		[Column(Name="pbskortart", Storage="_Pbskortart", DbType="NVarChar(2)")]
		public string Pbskortart
		{
			get
			{
				return this._Pbskortart;
			}
			set
			{
				if ((this._Pbskortart != value))
				{
					this.OnPbskortartChanging(value);
					this.SendPropertyChanging();
					this._Pbskortart = value;
					this.SendPropertyChanged("Pbskortart");
					this.OnPbskortartChanged();
				}
			}
		}
		
		[Column(Name="pbsgebyrbelob", Storage="_Pbsgebyrbelob", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Pbsgebyrbelob
		{
			get
			{
				return this._Pbsgebyrbelob;
			}
			set
			{
				if ((this._Pbsgebyrbelob != value))
				{
					this.OnPbsgebyrbelobChanging(value);
					this.SendPropertyChanging();
					this._Pbsgebyrbelob = value;
					this.SendPropertyChanged("Pbsgebyrbelob");
					this.OnPbsgebyrbelobChanged();
				}
			}
		}
		
		[Column(Name="pbsarkivnr", Storage="_Pbsarkivnr", DbType="NVarChar(22)")]
		public string Pbsarkivnr
		{
			get
			{
				return this._Pbsarkivnr;
			}
			set
			{
				if ((this._Pbsarkivnr != value))
				{
					this.OnPbsarkivnrChanging(value);
					this.SendPropertyChanging();
					this._Pbsarkivnr = value;
					this.SendPropertyChanged("Pbsarkivnr");
					this.OnPbsarkivnrChanged();
				}
			}
		}
		
		[Association(Name="Tblbet_Tblbetlin", Storage="_Tblbet", ThisKey="Betid", OtherKey="Id", IsForeignKey=true)]
		public Tblbet Tblbet
		{
			get
			{
				return this._Tblbet.Entity;
			}
			set
			{
				Tblbet previousValue = this._Tblbet.Entity;
				if (((previousValue != value) 
							|| (this._Tblbet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tblbet.Entity = null;
						previousValue.Tblbetlin.Remove(this);
					}
					this._Tblbet.Entity = value;
					if ((value != null))
					{
						value.Tblbetlin.Add(this);
						this._Betid = value.Id;
					}
					else
					{
						this._Betid = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tblbet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="tblfak")]
	public partial class Tblfak : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Tilpbsid;
		
		private System.Nullable<System.DateTime> _Betalingsdato;
		
		private System.Nullable<int> _Nr;
		
		private System.Nullable<int> _Faknr;
		
		private string _Advistekst;
		
		private System.Nullable<decimal> _Advisbelob;
		
		private System.Nullable<int> _Infotekst;
		
		private System.Nullable<int> _Bogfkonto;
		
		private System.Nullable<int> _Vnr;
		
		private System.Nullable<System.DateTime> _Fradato;
		
		private System.Nullable<System.DateTime> _Tildato;
		
		private System.Nullable<int> _SFakID;
		
		private System.Nullable<int> _SFaknr;
		
		private System.Nullable<System.DateTime> _Rykkerdato;
		
		private System.Nullable<System.DateTime> _Maildato;
		
		private bool _Rykkerstop;
		
		private bool _Betalt;
		
		private bool _Tilmeldtpbs;
		
		private bool _Indmeldelse;
		
		private EntityRef<Tbltilpbs> _Tbltilpbs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTilpbsidChanging(System.Nullable<int> value);
    partial void OnTilpbsidChanged();
    partial void OnBetalingsdatoChanging(System.Nullable<System.DateTime> value);
    partial void OnBetalingsdatoChanged();
    partial void OnNrChanging(System.Nullable<int> value);
    partial void OnNrChanged();
    partial void OnFaknrChanging(System.Nullable<int> value);
    partial void OnFaknrChanged();
    partial void OnAdvistekstChanging(string value);
    partial void OnAdvistekstChanged();
    partial void OnAdvisbelobChanging(System.Nullable<decimal> value);
    partial void OnAdvisbelobChanged();
    partial void OnInfotekstChanging(System.Nullable<int> value);
    partial void OnInfotekstChanged();
    partial void OnBogfkontoChanging(System.Nullable<int> value);
    partial void OnBogfkontoChanged();
    partial void OnVnrChanging(System.Nullable<int> value);
    partial void OnVnrChanged();
    partial void OnFradatoChanging(System.Nullable<System.DateTime> value);
    partial void OnFradatoChanged();
    partial void OnTildatoChanging(System.Nullable<System.DateTime> value);
    partial void OnTildatoChanged();
    partial void OnSFakIDChanging(System.Nullable<int> value);
    partial void OnSFakIDChanged();
    partial void OnSFaknrChanging(System.Nullable<int> value);
    partial void OnSFaknrChanged();
    partial void OnRykkerdatoChanging(System.Nullable<System.DateTime> value);
    partial void OnRykkerdatoChanged();
    partial void OnMaildatoChanging(System.Nullable<System.DateTime> value);
    partial void OnMaildatoChanged();
    partial void OnRykkerstopChanging(bool value);
    partial void OnRykkerstopChanged();
    partial void OnBetaltChanging(bool value);
    partial void OnBetaltChanged();
    partial void OnTilmeldtpbsChanging(bool value);
    partial void OnTilmeldtpbsChanged();
    partial void OnIndmeldelseChanging(bool value);
    partial void OnIndmeldelseChanged();
    #endregion
		
		public Tblfak()
		{
			this._Tbltilpbs = default(EntityRef<Tbltilpbs>);
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="tilpbsid", Storage="_Tilpbsid", DbType="Int")]
		public System.Nullable<int> Tilpbsid
		{
			get
			{
				return this._Tilpbsid;
			}
			set
			{
				if ((this._Tilpbsid != value))
				{
					this.OnTilpbsidChanging(value);
					this.SendPropertyChanging();
					this._Tilpbsid = value;
					this.SendPropertyChanged("Tilpbsid");
					this.OnTilpbsidChanged();
				}
			}
		}
		
		[Column(Name="betalingsdato", Storage="_Betalingsdato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Betalingsdato
		{
			get
			{
				return this._Betalingsdato;
			}
			set
			{
				if ((this._Betalingsdato != value))
				{
					this.OnBetalingsdatoChanging(value);
					this.SendPropertyChanging();
					this._Betalingsdato = value;
					this.SendPropertyChanged("Betalingsdato");
					this.OnBetalingsdatoChanged();
				}
			}
		}
		
		[Column(Storage="_Nr", DbType="Int")]
		public System.Nullable<int> Nr
		{
			get
			{
				return this._Nr;
			}
			set
			{
				if ((this._Nr != value))
				{
					this.OnNrChanging(value);
					this.SendPropertyChanging();
					this._Nr = value;
					this.SendPropertyChanged("Nr");
					this.OnNrChanged();
				}
			}
		}
		
		[Column(Name="faknr", Storage="_Faknr", DbType="Int")]
		public System.Nullable<int> Faknr
		{
			get
			{
				return this._Faknr;
			}
			set
			{
				if ((this._Faknr != value))
				{
					this.OnFaknrChanging(value);
					this.SendPropertyChanging();
					this._Faknr = value;
					this.SendPropertyChanged("Faknr");
					this.OnFaknrChanged();
				}
			}
		}
		
		[Column(Name="advistekst", Storage="_Advistekst", DbType="NVarChar(4000)")]
		public string Advistekst
		{
			get
			{
				return this._Advistekst;
			}
			set
			{
				if ((this._Advistekst != value))
				{
					this.OnAdvistekstChanging(value);
					this.SendPropertyChanging();
					this._Advistekst = value;
					this.SendPropertyChanged("Advistekst");
					this.OnAdvistekstChanged();
				}
			}
		}
		
		[Column(Name="advisbelob", Storage="_Advisbelob", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Advisbelob
		{
			get
			{
				return this._Advisbelob;
			}
			set
			{
				if ((this._Advisbelob != value))
				{
					this.OnAdvisbelobChanging(value);
					this.SendPropertyChanging();
					this._Advisbelob = value;
					this.SendPropertyChanged("Advisbelob");
					this.OnAdvisbelobChanged();
				}
			}
		}
		
		[Column(Name="infotekst", Storage="_Infotekst", DbType="Int")]
		public System.Nullable<int> Infotekst
		{
			get
			{
				return this._Infotekst;
			}
			set
			{
				if ((this._Infotekst != value))
				{
					this.OnInfotekstChanging(value);
					this.SendPropertyChanging();
					this._Infotekst = value;
					this.SendPropertyChanged("Infotekst");
					this.OnInfotekstChanged();
				}
			}
		}
		
		[Column(Name="bogfkonto", Storage="_Bogfkonto", DbType="Int")]
		public System.Nullable<int> Bogfkonto
		{
			get
			{
				return this._Bogfkonto;
			}
			set
			{
				if ((this._Bogfkonto != value))
				{
					this.OnBogfkontoChanging(value);
					this.SendPropertyChanging();
					this._Bogfkonto = value;
					this.SendPropertyChanged("Bogfkonto");
					this.OnBogfkontoChanged();
				}
			}
		}
		
		[Column(Name="vnr", Storage="_Vnr", DbType="Int")]
		public System.Nullable<int> Vnr
		{
			get
			{
				return this._Vnr;
			}
			set
			{
				if ((this._Vnr != value))
				{
					this.OnVnrChanging(value);
					this.SendPropertyChanging();
					this._Vnr = value;
					this.SendPropertyChanged("Vnr");
					this.OnVnrChanged();
				}
			}
		}
		
		[Column(Name="fradato", Storage="_Fradato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fradato
		{
			get
			{
				return this._Fradato;
			}
			set
			{
				if ((this._Fradato != value))
				{
					this.OnFradatoChanging(value);
					this.SendPropertyChanging();
					this._Fradato = value;
					this.SendPropertyChanged("Fradato");
					this.OnFradatoChanged();
				}
			}
		}
		
		[Column(Name="tildato", Storage="_Tildato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Tildato
		{
			get
			{
				return this._Tildato;
			}
			set
			{
				if ((this._Tildato != value))
				{
					this.OnTildatoChanging(value);
					this.SendPropertyChanging();
					this._Tildato = value;
					this.SendPropertyChanged("Tildato");
					this.OnTildatoChanged();
				}
			}
		}
		
		[Column(Storage="_SFakID", DbType="Int")]
		public System.Nullable<int> SFakID
		{
			get
			{
				return this._SFakID;
			}
			set
			{
				if ((this._SFakID != value))
				{
					this.OnSFakIDChanging(value);
					this.SendPropertyChanging();
					this._SFakID = value;
					this.SendPropertyChanged("SFakID");
					this.OnSFakIDChanged();
				}
			}
		}
		
		[Column(Storage="_SFaknr", DbType="Int")]
		public System.Nullable<int> SFaknr
		{
			get
			{
				return this._SFaknr;
			}
			set
			{
				if ((this._SFaknr != value))
				{
					this.OnSFaknrChanging(value);
					this.SendPropertyChanging();
					this._SFaknr = value;
					this.SendPropertyChanged("SFaknr");
					this.OnSFaknrChanged();
				}
			}
		}
		
		[Column(Name="rykkerdato", Storage="_Rykkerdato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rykkerdato
		{
			get
			{
				return this._Rykkerdato;
			}
			set
			{
				if ((this._Rykkerdato != value))
				{
					this.OnRykkerdatoChanging(value);
					this.SendPropertyChanging();
					this._Rykkerdato = value;
					this.SendPropertyChanged("Rykkerdato");
					this.OnRykkerdatoChanged();
				}
			}
		}
		
		[Column(Name="maildato", Storage="_Maildato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Maildato
		{
			get
			{
				return this._Maildato;
			}
			set
			{
				if ((this._Maildato != value))
				{
					this.OnMaildatoChanging(value);
					this.SendPropertyChanging();
					this._Maildato = value;
					this.SendPropertyChanged("Maildato");
					this.OnMaildatoChanged();
				}
			}
		}
		
		[Column(Name="rykkerstop", Storage="_Rykkerstop", DbType="Bit NOT NULL")]
		public bool Rykkerstop
		{
			get
			{
				return this._Rykkerstop;
			}
			set
			{
				if ((this._Rykkerstop != value))
				{
					this.OnRykkerstopChanging(value);
					this.SendPropertyChanging();
					this._Rykkerstop = value;
					this.SendPropertyChanged("Rykkerstop");
					this.OnRykkerstopChanged();
				}
			}
		}
		
		[Column(Name="betalt", Storage="_Betalt", DbType="Bit NOT NULL")]
		public bool Betalt
		{
			get
			{
				return this._Betalt;
			}
			set
			{
				if ((this._Betalt != value))
				{
					this.OnBetaltChanging(value);
					this.SendPropertyChanging();
					this._Betalt = value;
					this.SendPropertyChanged("Betalt");
					this.OnBetaltChanged();
				}
			}
		}
		
		[Column(Name="tilmeldtpbs", Storage="_Tilmeldtpbs", DbType="Bit NOT NULL")]
		public bool Tilmeldtpbs
		{
			get
			{
				return this._Tilmeldtpbs;
			}
			set
			{
				if ((this._Tilmeldtpbs != value))
				{
					this.OnTilmeldtpbsChanging(value);
					this.SendPropertyChanging();
					this._Tilmeldtpbs = value;
					this.SendPropertyChanged("Tilmeldtpbs");
					this.OnTilmeldtpbsChanged();
				}
			}
		}
		
		[Column(Name="indmeldelse", Storage="_Indmeldelse", DbType="Bit NOT NULL")]
		public bool Indmeldelse
		{
			get
			{
				return this._Indmeldelse;
			}
			set
			{
				if ((this._Indmeldelse != value))
				{
					this.OnIndmeldelseChanging(value);
					this.SendPropertyChanging();
					this._Indmeldelse = value;
					this.SendPropertyChanged("Indmeldelse");
					this.OnIndmeldelseChanged();
				}
			}
		}
		
		[Association(Name="Tbltilpbs_Tblfak", Storage="_Tbltilpbs", ThisKey="Tilpbsid", OtherKey="Id", IsForeignKey=true)]
		public Tbltilpbs Tbltilpbs
		{
			get
			{
				return this._Tbltilpbs.Entity;
			}
			set
			{
				Tbltilpbs previousValue = this._Tbltilpbs.Entity;
				if (((previousValue != value) 
							|| (this._Tbltilpbs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbltilpbs.Entity = null;
						previousValue.Tblfak.Remove(this);
					}
					this._Tbltilpbs.Entity = value;
					if ((value != null))
					{
						value.Tblfak.Add(this);
						this._Tilpbsid = value.Id;
					}
					else
					{
						this._Tilpbsid = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbltilpbs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="tblfrapbs")]
	public partial class Tblfrapbs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Delsystem;
		
		private string _Leverancetype;
		
		private System.Nullable<System.DateTime> _Udtrukket;
		
		private System.Nullable<System.DateTime> _Bilagdato;
		
		private System.Nullable<int> _Pbsforsendelseid;
		
		private string _Leverancespecifikation;
		
		private System.Nullable<System.DateTime> _Leverancedannelsesdato;
		
		private EntitySet<Tblaftalelin> _Tblaftalelin;
		
		private EntitySet<Tblbet> _Tblbet;
		
		private EntitySet<Tblindbetalingskort> _Tblindbetalingskort;
		
		private EntityRef<Tblpbsforsendelse> _Tblpbsforsendelse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDelsystemChanging(string value);
    partial void OnDelsystemChanged();
    partial void OnLeverancetypeChanging(string value);
    partial void OnLeverancetypeChanged();
    partial void OnUdtrukketChanging(System.Nullable<System.DateTime> value);
    partial void OnUdtrukketChanged();
    partial void OnBilagdatoChanging(System.Nullable<System.DateTime> value);
    partial void OnBilagdatoChanged();
    partial void OnPbsforsendelseidChanging(System.Nullable<int> value);
    partial void OnPbsforsendelseidChanged();
    partial void OnLeverancespecifikationChanging(string value);
    partial void OnLeverancespecifikationChanged();
    partial void OnLeverancedannelsesdatoChanging(System.Nullable<System.DateTime> value);
    partial void OnLeverancedannelsesdatoChanged();
    #endregion
		
		public Tblfrapbs()
		{
			this._Tblaftalelin = new EntitySet<Tblaftalelin>(new Action<Tblaftalelin>(this.attach_Tblaftalelin), new Action<Tblaftalelin>(this.detach_Tblaftalelin));
			this._Tblbet = new EntitySet<Tblbet>(new Action<Tblbet>(this.attach_Tblbet), new Action<Tblbet>(this.detach_Tblbet));
			this._Tblindbetalingskort = new EntitySet<Tblindbetalingskort>(new Action<Tblindbetalingskort>(this.attach_Tblindbetalingskort), new Action<Tblindbetalingskort>(this.detach_Tblindbetalingskort));
			this._Tblpbsforsendelse = default(EntityRef<Tblpbsforsendelse>);
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="delsystem", Storage="_Delsystem", DbType="NVarChar(3)")]
		public string Delsystem
		{
			get
			{
				return this._Delsystem;
			}
			set
			{
				if ((this._Delsystem != value))
				{
					this.OnDelsystemChanging(value);
					this.SendPropertyChanging();
					this._Delsystem = value;
					this.SendPropertyChanged("Delsystem");
					this.OnDelsystemChanged();
				}
			}
		}
		
		[Column(Name="leverancetype", Storage="_Leverancetype", DbType="NVarChar(4)")]
		public string Leverancetype
		{
			get
			{
				return this._Leverancetype;
			}
			set
			{
				if ((this._Leverancetype != value))
				{
					this.OnLeverancetypeChanging(value);
					this.SendPropertyChanging();
					this._Leverancetype = value;
					this.SendPropertyChanged("Leverancetype");
					this.OnLeverancetypeChanged();
				}
			}
		}
		
		[Column(Name="udtrukket", Storage="_Udtrukket", DbType="DateTime")]
		public System.Nullable<System.DateTime> Udtrukket
		{
			get
			{
				return this._Udtrukket;
			}
			set
			{
				if ((this._Udtrukket != value))
				{
					this.OnUdtrukketChanging(value);
					this.SendPropertyChanging();
					this._Udtrukket = value;
					this.SendPropertyChanged("Udtrukket");
					this.OnUdtrukketChanged();
				}
			}
		}
		
		[Column(Name="bilagdato", Storage="_Bilagdato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Bilagdato
		{
			get
			{
				return this._Bilagdato;
			}
			set
			{
				if ((this._Bilagdato != value))
				{
					this.OnBilagdatoChanging(value);
					this.SendPropertyChanging();
					this._Bilagdato = value;
					this.SendPropertyChanged("Bilagdato");
					this.OnBilagdatoChanged();
				}
			}
		}
		
		[Column(Name="pbsforsendelseid", Storage="_Pbsforsendelseid", DbType="Int")]
		public System.Nullable<int> Pbsforsendelseid
		{
			get
			{
				return this._Pbsforsendelseid;
			}
			set
			{
				if ((this._Pbsforsendelseid != value))
				{
					this.OnPbsforsendelseidChanging(value);
					this.SendPropertyChanging();
					this._Pbsforsendelseid = value;
					this.SendPropertyChanged("Pbsforsendelseid");
					this.OnPbsforsendelseidChanged();
				}
			}
		}
		
		[Column(Name="leverancespecifikation", Storage="_Leverancespecifikation", DbType="NVarChar(50)")]
		public string Leverancespecifikation
		{
			get
			{
				return this._Leverancespecifikation;
			}
			set
			{
				if ((this._Leverancespecifikation != value))
				{
					this.OnLeverancespecifikationChanging(value);
					this.SendPropertyChanging();
					this._Leverancespecifikation = value;
					this.SendPropertyChanged("Leverancespecifikation");
					this.OnLeverancespecifikationChanged();
				}
			}
		}
		
		[Column(Name="leverancedannelsesdato", Storage="_Leverancedannelsesdato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Leverancedannelsesdato
		{
			get
			{
				return this._Leverancedannelsesdato;
			}
			set
			{
				if ((this._Leverancedannelsesdato != value))
				{
					this.OnLeverancedannelsesdatoChanging(value);
					this.SendPropertyChanging();
					this._Leverancedannelsesdato = value;
					this.SendPropertyChanged("Leverancedannelsesdato");
					this.OnLeverancedannelsesdatoChanged();
				}
			}
		}
		
		[Association(Name="Tblfrapbs_Tblaftalelin", Storage="_Tblaftalelin", ThisKey="Id", OtherKey="Frapbsid")]
		public EntitySet<Tblaftalelin> Tblaftalelin
		{
			get
			{
				return this._Tblaftalelin;
			}
			set
			{
				this._Tblaftalelin.Assign(value);
			}
		}
		
		[Association(Name="Tblfrapbs_Tblbet", Storage="_Tblbet", ThisKey="Id", OtherKey="Frapbsid")]
		public EntitySet<Tblbet> Tblbet
		{
			get
			{
				return this._Tblbet;
			}
			set
			{
				this._Tblbet.Assign(value);
			}
		}
		
		[Association(Name="Tblfrapbs_Tblindbetalingskort", Storage="_Tblindbetalingskort", ThisKey="Id", OtherKey="Frapbsid")]
		public EntitySet<Tblindbetalingskort> Tblindbetalingskort
		{
			get
			{
				return this._Tblindbetalingskort;
			}
			set
			{
				this._Tblindbetalingskort.Assign(value);
			}
		}
		
		[Association(Name="Tblpbsforsendelse_Tblfrapbs", Storage="_Tblpbsforsendelse", ThisKey="Pbsforsendelseid", OtherKey="Id", IsForeignKey=true)]
		public Tblpbsforsendelse Tblpbsforsendelse
		{
			get
			{
				return this._Tblpbsforsendelse.Entity;
			}
			set
			{
				Tblpbsforsendelse previousValue = this._Tblpbsforsendelse.Entity;
				if (((previousValue != value) 
							|| (this._Tblpbsforsendelse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tblpbsforsendelse.Entity = null;
						previousValue.Tblfrapbs.Remove(this);
					}
					this._Tblpbsforsendelse.Entity = value;
					if ((value != null))
					{
						value.Tblfrapbs.Add(this);
						this._Pbsforsendelseid = value.Id;
					}
					else
					{
						this._Pbsforsendelseid = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tblpbsforsendelse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tblaftalelin(Tblaftalelin entity)
		{
			this.SendPropertyChanging();
			entity.Tblfrapbs = this;
		}
		
		private void detach_Tblaftalelin(Tblaftalelin entity)
		{
			this.SendPropertyChanging();
			entity.Tblfrapbs = null;
		}
		
		private void attach_Tblbet(Tblbet entity)
		{
			this.SendPropertyChanging();
			entity.Tblfrapbs = this;
		}
		
		private void detach_Tblbet(Tblbet entity)
		{
			this.SendPropertyChanging();
			entity.Tblfrapbs = null;
		}
		
		private void attach_Tblindbetalingskort(Tblindbetalingskort entity)
		{
			this.SendPropertyChanging();
			entity.Tblfrapbs = this;
		}
		
		private void detach_Tblindbetalingskort(Tblindbetalingskort entity)
		{
			this.SendPropertyChanging();
			entity.Tblfrapbs = null;
		}
	}
	
	[Table(Name="tblindbetalingskort")]
	public partial class Tblindbetalingskort : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Frapbsid;
		
		private string _Pbstranskode;
		
		private int _Nr;
		
		private System.Nullable<int> _Faknr;
		
		private string _Debitorkonto;
		
		private string _Debgrpnr;
		
		private string _Kortartkode;
		
		private string _Fikreditornr;
		
		private string _Indbetalerident;
		
		private System.Nullable<System.DateTime> _Dato;
		
		private System.Nullable<decimal> _Belob;
		
		private string _Pbssektionnr;
		
		private EntityRef<Tblfrapbs> _Tblfrapbs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFrapbsidChanging(int value);
    partial void OnFrapbsidChanged();
    partial void OnPbstranskodeChanging(string value);
    partial void OnPbstranskodeChanged();
    partial void OnNrChanging(int value);
    partial void OnNrChanged();
    partial void OnFaknrChanging(System.Nullable<int> value);
    partial void OnFaknrChanged();
    partial void OnDebitorkontoChanging(string value);
    partial void OnDebitorkontoChanged();
    partial void OnDebgrpnrChanging(string value);
    partial void OnDebgrpnrChanged();
    partial void OnKortartkodeChanging(string value);
    partial void OnKortartkodeChanged();
    partial void OnFikreditornrChanging(string value);
    partial void OnFikreditornrChanged();
    partial void OnIndbetaleridentChanging(string value);
    partial void OnIndbetaleridentChanged();
    partial void OnDatoChanging(System.Nullable<System.DateTime> value);
    partial void OnDatoChanged();
    partial void OnBelobChanging(System.Nullable<decimal> value);
    partial void OnBelobChanged();
    partial void OnPbssektionnrChanging(string value);
    partial void OnPbssektionnrChanged();
    #endregion
		
		public Tblindbetalingskort()
		{
			this._Tblfrapbs = default(EntityRef<Tblfrapbs>);
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="frapbsid", Storage="_Frapbsid", DbType="Int NOT NULL")]
		public int Frapbsid
		{
			get
			{
				return this._Frapbsid;
			}
			set
			{
				if ((this._Frapbsid != value))
				{
					this.OnFrapbsidChanging(value);
					this.SendPropertyChanging();
					this._Frapbsid = value;
					this.SendPropertyChanged("Frapbsid");
					this.OnFrapbsidChanged();
				}
			}
		}
		
		[Column(Name="pbstranskode", Storage="_Pbstranskode", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string Pbstranskode
		{
			get
			{
				return this._Pbstranskode;
			}
			set
			{
				if ((this._Pbstranskode != value))
				{
					this.OnPbstranskodeChanging(value);
					this.SendPropertyChanging();
					this._Pbstranskode = value;
					this.SendPropertyChanged("Pbstranskode");
					this.OnPbstranskodeChanged();
				}
			}
		}
		
		[Column(Storage="_Nr", DbType="Int NOT NULL")]
		public int Nr
		{
			get
			{
				return this._Nr;
			}
			set
			{
				if ((this._Nr != value))
				{
					this.OnNrChanging(value);
					this.SendPropertyChanging();
					this._Nr = value;
					this.SendPropertyChanged("Nr");
					this.OnNrChanged();
				}
			}
		}
		
		[Column(Name="faknr", Storage="_Faknr", DbType="Int")]
		public System.Nullable<int> Faknr
		{
			get
			{
				return this._Faknr;
			}
			set
			{
				if ((this._Faknr != value))
				{
					this.OnFaknrChanging(value);
					this.SendPropertyChanging();
					this._Faknr = value;
					this.SendPropertyChanged("Faknr");
					this.OnFaknrChanged();
				}
			}
		}
		
		[Column(Name="debitorkonto", Storage="_Debitorkonto", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Debitorkonto
		{
			get
			{
				return this._Debitorkonto;
			}
			set
			{
				if ((this._Debitorkonto != value))
				{
					this.OnDebitorkontoChanging(value);
					this.SendPropertyChanging();
					this._Debitorkonto = value;
					this.SendPropertyChanged("Debitorkonto");
					this.OnDebitorkontoChanged();
				}
			}
		}
		
		[Column(Name="debgrpnr", Storage="_Debgrpnr", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Debgrpnr
		{
			get
			{
				return this._Debgrpnr;
			}
			set
			{
				if ((this._Debgrpnr != value))
				{
					this.OnDebgrpnrChanging(value);
					this.SendPropertyChanging();
					this._Debgrpnr = value;
					this.SendPropertyChanged("Debgrpnr");
					this.OnDebgrpnrChanged();
				}
			}
		}
		
		[Column(Name="kortartkode", Storage="_Kortartkode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string Kortartkode
		{
			get
			{
				return this._Kortartkode;
			}
			set
			{
				if ((this._Kortartkode != value))
				{
					this.OnKortartkodeChanging(value);
					this.SendPropertyChanging();
					this._Kortartkode = value;
					this.SendPropertyChanged("Kortartkode");
					this.OnKortartkodeChanged();
				}
			}
		}
		
		[Column(Name="fikreditornr", Storage="_Fikreditornr", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Fikreditornr
		{
			get
			{
				return this._Fikreditornr;
			}
			set
			{
				if ((this._Fikreditornr != value))
				{
					this.OnFikreditornrChanging(value);
					this.SendPropertyChanging();
					this._Fikreditornr = value;
					this.SendPropertyChanged("Fikreditornr");
					this.OnFikreditornrChanged();
				}
			}
		}
		
		[Column(Name="indbetalerident", Storage="_Indbetalerident", DbType="NVarChar(19) NOT NULL", CanBeNull=false)]
		public string Indbetalerident
		{
			get
			{
				return this._Indbetalerident;
			}
			set
			{
				if ((this._Indbetalerident != value))
				{
					this.OnIndbetaleridentChanging(value);
					this.SendPropertyChanging();
					this._Indbetalerident = value;
					this.SendPropertyChanged("Indbetalerident");
					this.OnIndbetaleridentChanged();
				}
			}
		}
		
		[Column(Name="dato", Storage="_Dato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dato
		{
			get
			{
				return this._Dato;
			}
			set
			{
				if ((this._Dato != value))
				{
					this.OnDatoChanging(value);
					this.SendPropertyChanging();
					this._Dato = value;
					this.SendPropertyChanged("Dato");
					this.OnDatoChanged();
				}
			}
		}
		
		[Column(Name="belob", Storage="_Belob", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Belob
		{
			get
			{
				return this._Belob;
			}
			set
			{
				if ((this._Belob != value))
				{
					this.OnBelobChanging(value);
					this.SendPropertyChanging();
					this._Belob = value;
					this.SendPropertyChanged("Belob");
					this.OnBelobChanged();
				}
			}
		}
		
		[Column(Name="pbssektionnr", Storage="_Pbssektionnr", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Pbssektionnr
		{
			get
			{
				return this._Pbssektionnr;
			}
			set
			{
				if ((this._Pbssektionnr != value))
				{
					this.OnPbssektionnrChanging(value);
					this.SendPropertyChanging();
					this._Pbssektionnr = value;
					this.SendPropertyChanged("Pbssektionnr");
					this.OnPbssektionnrChanged();
				}
			}
		}
		
		[Association(Name="Tblfrapbs_Tblindbetalingskort", Storage="_Tblfrapbs", ThisKey="Frapbsid", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public Tblfrapbs Tblfrapbs
		{
			get
			{
				return this._Tblfrapbs.Entity;
			}
			set
			{
				Tblfrapbs previousValue = this._Tblfrapbs.Entity;
				if (((previousValue != value) 
							|| (this._Tblfrapbs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tblfrapbs.Entity = null;
						previousValue.Tblindbetalingskort.Remove(this);
					}
					this._Tblfrapbs.Entity = value;
					if ((value != null))
					{
						value.Tblindbetalingskort.Add(this);
						this._Frapbsid = value.Id;
					}
					else
					{
						this._Frapbsid = default(int);
					}
					this.SendPropertyChanged("Tblfrapbs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="tblinfotekst")]
	public partial class Tblinfotekst : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Navn;
		
		private string _Msgtext;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNavnChanging(string value);
    partial void OnNavnChanged();
    partial void OnMsgtextChanging(string value);
    partial void OnMsgtextChanged();
    #endregion
		
		public Tblinfotekst()
		{
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="navn", Storage="_Navn", DbType="NVarChar(50)")]
		public string Navn
		{
			get
			{
				return this._Navn;
			}
			set
			{
				if ((this._Navn != value))
				{
					this.OnNavnChanging(value);
					this.SendPropertyChanging();
					this._Navn = value;
					this.SendPropertyChanged("Navn");
					this.OnNavnChanged();
				}
			}
		}
		
		[Column(Name="msgtext", Storage="_Msgtext", DbType="NVarChar(4000)")]
		public string Msgtext
		{
			get
			{
				return this._Msgtext;
			}
			set
			{
				if ((this._Msgtext != value))
				{
					this.OnMsgtextChanging(value);
					this.SendPropertyChanging();
					this._Msgtext = value;
					this.SendPropertyChanged("Msgtext");
					this.OnMsgtextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="tblKontingent")]
	public partial class TblKontingent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Startdato;
		
		private System.DateTime _Slutdato;
		
		private int _Startalder;
		
		private int _Slutalder;
		
		private decimal _Aarskontingent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStartdatoChanging(System.DateTime value);
    partial void OnStartdatoChanged();
    partial void OnSlutdatoChanging(System.DateTime value);
    partial void OnSlutdatoChanged();
    partial void OnStartalderChanging(int value);
    partial void OnStartalderChanged();
    partial void OnSlutalderChanging(int value);
    partial void OnSlutalderChanged();
    partial void OnAarskontingentChanging(decimal value);
    partial void OnAarskontingentChanged();
    #endregion
		
		public TblKontingent()
		{
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="startdato", Storage="_Startdato", DbType="DateTime NOT NULL")]
		public System.DateTime Startdato
		{
			get
			{
				return this._Startdato;
			}
			set
			{
				if ((this._Startdato != value))
				{
					this.OnStartdatoChanging(value);
					this.SendPropertyChanging();
					this._Startdato = value;
					this.SendPropertyChanged("Startdato");
					this.OnStartdatoChanged();
				}
			}
		}
		
		[Column(Name="slutdato", Storage="_Slutdato", DbType="DateTime NOT NULL")]
		public System.DateTime Slutdato
		{
			get
			{
				return this._Slutdato;
			}
			set
			{
				if ((this._Slutdato != value))
				{
					this.OnSlutdatoChanging(value);
					this.SendPropertyChanging();
					this._Slutdato = value;
					this.SendPropertyChanged("Slutdato");
					this.OnSlutdatoChanged();
				}
			}
		}
		
		[Column(Name="startalder", Storage="_Startalder", DbType="Int NOT NULL")]
		public int Startalder
		{
			get
			{
				return this._Startalder;
			}
			set
			{
				if ((this._Startalder != value))
				{
					this.OnStartalderChanging(value);
					this.SendPropertyChanging();
					this._Startalder = value;
					this.SendPropertyChanged("Startalder");
					this.OnStartalderChanged();
				}
			}
		}
		
		[Column(Name="slutalder", Storage="_Slutalder", DbType="Int NOT NULL")]
		public int Slutalder
		{
			get
			{
				return this._Slutalder;
			}
			set
			{
				if ((this._Slutalder != value))
				{
					this.OnSlutalderChanging(value);
					this.SendPropertyChanging();
					this._Slutalder = value;
					this.SendPropertyChanged("Slutalder");
					this.OnSlutalderChanged();
				}
			}
		}
		
		[Column(Name="aarskontingent", Storage="_Aarskontingent", DbType="Decimal(18,2) NOT NULL")]
		public decimal Aarskontingent
		{
			get
			{
				return this._Aarskontingent;
			}
			set
			{
				if ((this._Aarskontingent != value))
				{
					this.OnAarskontingentChanging(value);
					this.SendPropertyChanging();
					this._Aarskontingent = value;
					this.SendPropertyChanged("Aarskontingent");
					this.OnAarskontingentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="tblkreditor")]
	public partial class Tblkreditor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Datalevnr;
		
		private string _Datalevnavn;
		
		private string _Pbsnr;
		
		private string _Delsystem;
		
		private string _Regnr;
		
		private string _Kontonr;
		
		private string _Debgrpnr;
		
		private string _Sektionnr;
		
		private string _Transkodebetaling;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDatalevnrChanging(string value);
    partial void OnDatalevnrChanged();
    partial void OnDatalevnavnChanging(string value);
    partial void OnDatalevnavnChanged();
    partial void OnPbsnrChanging(string value);
    partial void OnPbsnrChanged();
    partial void OnDelsystemChanging(string value);
    partial void OnDelsystemChanged();
    partial void OnRegnrChanging(string value);
    partial void OnRegnrChanged();
    partial void OnKontonrChanging(string value);
    partial void OnKontonrChanged();
    partial void OnDebgrpnrChanging(string value);
    partial void OnDebgrpnrChanged();
    partial void OnSektionnrChanging(string value);
    partial void OnSektionnrChanged();
    partial void OnTranskodebetalingChanging(string value);
    partial void OnTranskodebetalingChanged();
    #endregion
		
		public Tblkreditor()
		{
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="datalevnr", Storage="_Datalevnr", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Datalevnr
		{
			get
			{
				return this._Datalevnr;
			}
			set
			{
				if ((this._Datalevnr != value))
				{
					this.OnDatalevnrChanging(value);
					this.SendPropertyChanging();
					this._Datalevnr = value;
					this.SendPropertyChanged("Datalevnr");
					this.OnDatalevnrChanged();
				}
			}
		}
		
		[Column(Name="datalevnavn", Storage="_Datalevnavn", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Datalevnavn
		{
			get
			{
				return this._Datalevnavn;
			}
			set
			{
				if ((this._Datalevnavn != value))
				{
					this.OnDatalevnavnChanging(value);
					this.SendPropertyChanging();
					this._Datalevnavn = value;
					this.SendPropertyChanged("Datalevnavn");
					this.OnDatalevnavnChanged();
				}
			}
		}
		
		[Column(Name="pbsnr", Storage="_Pbsnr", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Pbsnr
		{
			get
			{
				return this._Pbsnr;
			}
			set
			{
				if ((this._Pbsnr != value))
				{
					this.OnPbsnrChanging(value);
					this.SendPropertyChanging();
					this._Pbsnr = value;
					this.SendPropertyChanged("Pbsnr");
					this.OnPbsnrChanged();
				}
			}
		}
		
		[Column(Name="delsystem", Storage="_Delsystem", DbType="NVarChar(3)")]
		public string Delsystem
		{
			get
			{
				return this._Delsystem;
			}
			set
			{
				if ((this._Delsystem != value))
				{
					this.OnDelsystemChanging(value);
					this.SendPropertyChanging();
					this._Delsystem = value;
					this.SendPropertyChanged("Delsystem");
					this.OnDelsystemChanged();
				}
			}
		}
		
		[Column(Name="regnr", Storage="_Regnr", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string Regnr
		{
			get
			{
				return this._Regnr;
			}
			set
			{
				if ((this._Regnr != value))
				{
					this.OnRegnrChanging(value);
					this.SendPropertyChanging();
					this._Regnr = value;
					this.SendPropertyChanged("Regnr");
					this.OnRegnrChanged();
				}
			}
		}
		
		[Column(Name="kontonr", Storage="_Kontonr", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Kontonr
		{
			get
			{
				return this._Kontonr;
			}
			set
			{
				if ((this._Kontonr != value))
				{
					this.OnKontonrChanging(value);
					this.SendPropertyChanging();
					this._Kontonr = value;
					this.SendPropertyChanged("Kontonr");
					this.OnKontonrChanged();
				}
			}
		}
		
		[Column(Name="debgrpnr", Storage="_Debgrpnr", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Debgrpnr
		{
			get
			{
				return this._Debgrpnr;
			}
			set
			{
				if ((this._Debgrpnr != value))
				{
					this.OnDebgrpnrChanging(value);
					this.SendPropertyChanging();
					this._Debgrpnr = value;
					this.SendPropertyChanged("Debgrpnr");
					this.OnDebgrpnrChanged();
				}
			}
		}
		
		[Column(Name="sektionnr", Storage="_Sektionnr", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string Sektionnr
		{
			get
			{
				return this._Sektionnr;
			}
			set
			{
				if ((this._Sektionnr != value))
				{
					this.OnSektionnrChanging(value);
					this.SendPropertyChanging();
					this._Sektionnr = value;
					this.SendPropertyChanged("Sektionnr");
					this.OnSektionnrChanged();
				}
			}
		}
		
		[Column(Name="transkodebetaling", Storage="_Transkodebetaling", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string Transkodebetaling
		{
			get
			{
				return this._Transkodebetaling;
			}
			set
			{
				if ((this._Transkodebetaling != value))
				{
					this.OnTranskodebetalingChanging(value);
					this.SendPropertyChanging();
					this._Transkodebetaling = value;
					this.SendPropertyChanged("Transkodebetaling");
					this.OnTranskodebetalingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="tblMedlem")]
	public partial class TblMedlem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Nr;
		
		private string _Kon;
		
		private System.Nullable<System.DateTime> _FodtDato;
		
		private string _Navn;
		
		private string _Kaldenavn;
		
		private string _Adresse;
		
		private string _Postnr;
		
		private string _Bynavn;
		
		private string _Telefon;
		
		private string _Email;
		
		private string _Bank;
		
		private EntitySet<TblMedlemLog> _TblMedlemLog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNrChanging(int value);
    partial void OnNrChanged();
    partial void OnKonChanging(string value);
    partial void OnKonChanged();
    partial void OnFodtDatoChanging(System.Nullable<System.DateTime> value);
    partial void OnFodtDatoChanged();
    partial void OnNavnChanging(string value);
    partial void OnNavnChanged();
    partial void OnKaldenavnChanging(string value);
    partial void OnKaldenavnChanged();
    partial void OnAdresseChanging(string value);
    partial void OnAdresseChanged();
    partial void OnPostnrChanging(string value);
    partial void OnPostnrChanged();
    partial void OnBynavnChanging(string value);
    partial void OnBynavnChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnBankChanging(string value);
    partial void OnBankChanged();
    #endregion
		
		public TblMedlem()
		{
			this._TblMedlemLog = new EntitySet<TblMedlemLog>(new Action<TblMedlemLog>(this.attach_TblMedlemLog), new Action<TblMedlemLog>(this.detach_TblMedlemLog));
			OnCreated();
		}
		
		[Column(Storage="_Nr", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Nr
		{
			get
			{
				return this._Nr;
			}
			set
			{
				if ((this._Nr != value))
				{
					this.OnNrChanging(value);
					this.SendPropertyChanging();
					this._Nr = value;
					this.SendPropertyChanged("Nr");
					this.OnNrChanged();
				}
			}
		}
		
		[Column(Storage="_Kon", DbType="NVarChar(1)")]
		public string Kon
		{
			get
			{
				return this._Kon;
			}
			set
			{
				if ((this._Kon != value))
				{
					this.OnKonChanging(value);
					this.SendPropertyChanging();
					this._Kon = value;
					this.SendPropertyChanged("Kon");
					this.OnKonChanged();
				}
			}
		}
		
		[Column(Storage="_FodtDato", DbType="DateTime")]
		public System.Nullable<System.DateTime> FodtDato
		{
			get
			{
				return this._FodtDato;
			}
			set
			{
				if ((this._FodtDato != value))
				{
					this.OnFodtDatoChanging(value);
					this.SendPropertyChanging();
					this._FodtDato = value;
					this.SendPropertyChanged("FodtDato");
					this.OnFodtDatoChanged();
				}
			}
		}
		
		[Column(Storage="_Navn", DbType="NVarChar(35)")]
		public string Navn
		{
			get
			{
				return this._Navn;
			}
			set
			{
				if ((this._Navn != value))
				{
					this.OnNavnChanging(value);
					this.SendPropertyChanging();
					this._Navn = value;
					this.SendPropertyChanged("Navn");
					this.OnNavnChanged();
				}
			}
		}
		
		[Column(Storage="_Kaldenavn", DbType="NVarChar(25)")]
		public string Kaldenavn
		{
			get
			{
				return this._Kaldenavn;
			}
			set
			{
				if ((this._Kaldenavn != value))
				{
					this.OnKaldenavnChanging(value);
					this.SendPropertyChanging();
					this._Kaldenavn = value;
					this.SendPropertyChanged("Kaldenavn");
					this.OnKaldenavnChanged();
				}
			}
		}
		
		[Column(Storage="_Adresse", DbType="NVarChar(70)")]
		public string Adresse
		{
			get
			{
				return this._Adresse;
			}
			set
			{
				if ((this._Adresse != value))
				{
					this.OnAdresseChanging(value);
					this.SendPropertyChanging();
					this._Adresse = value;
					this.SendPropertyChanged("Adresse");
					this.OnAdresseChanged();
				}
			}
		}
		
		[Column(Storage="_Postnr", DbType="NVarChar(4)")]
		public string Postnr
		{
			get
			{
				return this._Postnr;
			}
			set
			{
				if ((this._Postnr != value))
				{
					this.OnPostnrChanging(value);
					this.SendPropertyChanging();
					this._Postnr = value;
					this.SendPropertyChanged("Postnr");
					this.OnPostnrChanged();
				}
			}
		}
		
		[Column(Storage="_Bynavn", DbType="NVarChar(25)")]
		public string Bynavn
		{
			get
			{
				return this._Bynavn;
			}
			set
			{
				if ((this._Bynavn != value))
				{
					this.OnBynavnChanging(value);
					this.SendPropertyChanging();
					this._Bynavn = value;
					this.SendPropertyChanged("Bynavn");
					this.OnBynavnChanged();
				}
			}
		}
		
		[Column(Storage="_Telefon", DbType="NVarChar(8)")]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Bank", DbType="NVarChar(15)")]
		public string Bank
		{
			get
			{
				return this._Bank;
			}
			set
			{
				if ((this._Bank != value))
				{
					this.OnBankChanging(value);
					this.SendPropertyChanging();
					this._Bank = value;
					this.SendPropertyChanged("Bank");
					this.OnBankChanged();
				}
			}
		}
		
		[Association(Name="TblMedlem_TblMedlemLog", Storage="_TblMedlemLog", ThisKey="Nr", OtherKey="Nr")]
		public EntitySet<TblMedlemLog> TblMedlemLog
		{
			get
			{
				return this._TblMedlemLog;
			}
			set
			{
				this._TblMedlemLog.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblMedlemLog(TblMedlemLog entity)
		{
			this.SendPropertyChanging();
			entity.TblMedlem = this;
		}
		
		private void detach_TblMedlemLog(TblMedlemLog entity)
		{
			this.SendPropertyChanging();
			entity.TblMedlem = null;
		}
	}
	
	[Table(Name="tblMedlemLog")]
	public partial class TblMedlemLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Nr;
		
		private System.Nullable<System.DateTime> _Logdato;
		
		private System.Nullable<int> _Akt_id;
		
		private System.Nullable<System.DateTime> _Akt_dato;
		
		private EntityRef<TblMedlem> _TblMedlem;
		
		private EntityRef<TblAktivitet> _TblAktivitet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNrChanging(System.Nullable<int> value);
    partial void OnNrChanged();
    partial void OnLogdatoChanging(System.Nullable<System.DateTime> value);
    partial void OnLogdatoChanged();
    partial void OnAkt_idChanging(System.Nullable<int> value);
    partial void OnAkt_idChanged();
    partial void OnAkt_datoChanging(System.Nullable<System.DateTime> value);
    partial void OnAkt_datoChanged();
    #endregion
		
		public TblMedlemLog()
		{
			this._TblMedlem = default(EntityRef<TblMedlem>);
			this._TblAktivitet = default(EntityRef<TblAktivitet>);
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Nr", DbType="Int")]
		public System.Nullable<int> Nr
		{
			get
			{
				return this._Nr;
			}
			set
			{
				if ((this._Nr != value))
				{
					if (this._TblMedlem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNrChanging(value);
					this.SendPropertyChanging();
					this._Nr = value;
					this.SendPropertyChanged("Nr");
					this.OnNrChanged();
				}
			}
		}
		
		[Column(Name="logdato", Storage="_Logdato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Logdato
		{
			get
			{
				return this._Logdato;
			}
			set
			{
				if ((this._Logdato != value))
				{
					this.OnLogdatoChanging(value);
					this.SendPropertyChanging();
					this._Logdato = value;
					this.SendPropertyChanged("Logdato");
					this.OnLogdatoChanged();
				}
			}
		}
		
		[Column(Name="akt_id", Storage="_Akt_id", DbType="Int")]
		public System.Nullable<int> Akt_id
		{
			get
			{
				return this._Akt_id;
			}
			set
			{
				if ((this._Akt_id != value))
				{
					this.OnAkt_idChanging(value);
					this.SendPropertyChanging();
					this._Akt_id = value;
					this.SendPropertyChanged("Akt_id");
					this.OnAkt_idChanged();
				}
			}
		}
		
		[Column(Name="akt_dato", Storage="_Akt_dato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Akt_dato
		{
			get
			{
				return this._Akt_dato;
			}
			set
			{
				if ((this._Akt_dato != value))
				{
					this.OnAkt_datoChanging(value);
					this.SendPropertyChanging();
					this._Akt_dato = value;
					this.SendPropertyChanged("Akt_dato");
					this.OnAkt_datoChanged();
				}
			}
		}
		
		[Association(Name="TblMedlem_TblMedlemLog", Storage="_TblMedlem", ThisKey="Nr", OtherKey="Nr", IsForeignKey=true)]
		public TblMedlem TblMedlem
		{
			get
			{
				return this._TblMedlem.Entity;
			}
			set
			{
				TblMedlem previousValue = this._TblMedlem.Entity;
				if (((previousValue != value) 
							|| (this._TblMedlem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblMedlem.Entity = null;
						previousValue.TblMedlemLog.Remove(this);
					}
					this._TblMedlem.Entity = value;
					if ((value != null))
					{
						value.TblMedlemLog.Add(this);
						this._Nr = value.Nr;
					}
					else
					{
						this._Nr = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblMedlem");
				}
			}
		}
		
		[Association(Name="TblAktivitet_TblMedlemLog", Storage="_TblAktivitet", ThisKey="Akt_id", OtherKey="Id", IsForeignKey=true)]
		public TblAktivitet TblAktivitet
		{
			get
			{
				return this._TblAktivitet.Entity;
			}
			set
			{
				TblAktivitet previousValue = this._TblAktivitet.Entity;
				if (((previousValue != value) 
							|| (this._TblAktivitet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblAktivitet.Entity = null;
						previousValue.TblMedlemLog.Remove(this);
					}
					this._TblAktivitet.Entity = value;
					if ((value != null))
					{
						value.TblMedlemLog.Add(this);
						this._Akt_id = value.Id;
					}
					else
					{
						this._Akt_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblAktivitet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="tblnrserie")]
	public partial class Tblnrserie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nrserienavn;
		
		private System.Nullable<int> _Sidstbrugtenr;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNrserienavnChanging(string value);
    partial void OnNrserienavnChanged();
    partial void OnSidstbrugtenrChanging(System.Nullable<int> value);
    partial void OnSidstbrugtenrChanged();
    #endregion
		
		public Tblnrserie()
		{
			OnCreated();
		}
		
		[Column(Name="nrserienavn", Storage="_Nrserienavn", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nrserienavn
		{
			get
			{
				return this._Nrserienavn;
			}
			set
			{
				if ((this._Nrserienavn != value))
				{
					this.OnNrserienavnChanging(value);
					this.SendPropertyChanging();
					this._Nrserienavn = value;
					this.SendPropertyChanged("Nrserienavn");
					this.OnNrserienavnChanged();
				}
			}
		}
		
		[Column(Name="sidstbrugtenr", Storage="_Sidstbrugtenr", DbType="Int")]
		public System.Nullable<int> Sidstbrugtenr
		{
			get
			{
				return this._Sidstbrugtenr;
			}
			set
			{
				if ((this._Sidstbrugtenr != value))
				{
					this.OnSidstbrugtenrChanging(value);
					this.SendPropertyChanging();
					this._Sidstbrugtenr = value;
					this.SendPropertyChanged("Sidstbrugtenr");
					this.OnSidstbrugtenrChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="tbloverforsel")]
	public partial class Tbloverforsel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Tilpbsid;
		
		private System.Nullable<int> _Nr;
		
		private System.Nullable<int> _SFaknr;
		
		private System.Nullable<int> _SFakID;
		
		private string _Advistekst;
		
		private System.Nullable<decimal> _Advisbelob;
		
		private string _Emailtekst;
		
		private System.Nullable<bool> _Emailsent;
		
		private string _Bankregnr;
		
		private string _Bankkontonr;
		
		private System.Nullable<System.DateTime> _Betalingsdato;
		
		private EntityRef<Tbltilpbs> _Tbltilpbs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTilpbsidChanging(System.Nullable<int> value);
    partial void OnTilpbsidChanged();
    partial void OnNrChanging(System.Nullable<int> value);
    partial void OnNrChanged();
    partial void OnSFaknrChanging(System.Nullable<int> value);
    partial void OnSFaknrChanged();
    partial void OnSFakIDChanging(System.Nullable<int> value);
    partial void OnSFakIDChanged();
    partial void OnAdvistekstChanging(string value);
    partial void OnAdvistekstChanged();
    partial void OnAdvisbelobChanging(System.Nullable<decimal> value);
    partial void OnAdvisbelobChanged();
    partial void OnEmailtekstChanging(string value);
    partial void OnEmailtekstChanged();
    partial void OnEmailsentChanging(System.Nullable<bool> value);
    partial void OnEmailsentChanged();
    partial void OnBankregnrChanging(string value);
    partial void OnBankregnrChanged();
    partial void OnBankkontonrChanging(string value);
    partial void OnBankkontonrChanged();
    partial void OnBetalingsdatoChanging(System.Nullable<System.DateTime> value);
    partial void OnBetalingsdatoChanged();
    #endregion
		
		public Tbloverforsel()
		{
			this._Tbltilpbs = default(EntityRef<Tbltilpbs>);
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="tilpbsid", Storage="_Tilpbsid", DbType="Int")]
		public System.Nullable<int> Tilpbsid
		{
			get
			{
				return this._Tilpbsid;
			}
			set
			{
				if ((this._Tilpbsid != value))
				{
					this.OnTilpbsidChanging(value);
					this.SendPropertyChanging();
					this._Tilpbsid = value;
					this.SendPropertyChanged("Tilpbsid");
					this.OnTilpbsidChanged();
				}
			}
		}
		
		[Column(Storage="_Nr", DbType="Int")]
		public System.Nullable<int> Nr
		{
			get
			{
				return this._Nr;
			}
			set
			{
				if ((this._Nr != value))
				{
					this.OnNrChanging(value);
					this.SendPropertyChanging();
					this._Nr = value;
					this.SendPropertyChanged("Nr");
					this.OnNrChanged();
				}
			}
		}
		
		[Column(Storage="_SFaknr", DbType="Int")]
		public System.Nullable<int> SFaknr
		{
			get
			{
				return this._SFaknr;
			}
			set
			{
				if ((this._SFaknr != value))
				{
					this.OnSFaknrChanging(value);
					this.SendPropertyChanging();
					this._SFaknr = value;
					this.SendPropertyChanged("SFaknr");
					this.OnSFaknrChanged();
				}
			}
		}
		
		[Column(Storage="_SFakID", DbType="Int")]
		public System.Nullable<int> SFakID
		{
			get
			{
				return this._SFakID;
			}
			set
			{
				if ((this._SFakID != value))
				{
					this.OnSFakIDChanging(value);
					this.SendPropertyChanging();
					this._SFakID = value;
					this.SendPropertyChanged("SFakID");
					this.OnSFakIDChanged();
				}
			}
		}
		
		[Column(Name="advistekst", Storage="_Advistekst", DbType="NVarChar(20)")]
		public string Advistekst
		{
			get
			{
				return this._Advistekst;
			}
			set
			{
				if ((this._Advistekst != value))
				{
					this.OnAdvistekstChanging(value);
					this.SendPropertyChanging();
					this._Advistekst = value;
					this.SendPropertyChanged("Advistekst");
					this.OnAdvistekstChanged();
				}
			}
		}
		
		[Column(Name="advisbelob", Storage="_Advisbelob", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Advisbelob
		{
			get
			{
				return this._Advisbelob;
			}
			set
			{
				if ((this._Advisbelob != value))
				{
					this.OnAdvisbelobChanging(value);
					this.SendPropertyChanging();
					this._Advisbelob = value;
					this.SendPropertyChanged("Advisbelob");
					this.OnAdvisbelobChanged();
				}
			}
		}
		
		[Column(Name="emailtekst", Storage="_Emailtekst", DbType="NVarChar(4000)")]
		public string Emailtekst
		{
			get
			{
				return this._Emailtekst;
			}
			set
			{
				if ((this._Emailtekst != value))
				{
					this.OnEmailtekstChanging(value);
					this.SendPropertyChanging();
					this._Emailtekst = value;
					this.SendPropertyChanged("Emailtekst");
					this.OnEmailtekstChanged();
				}
			}
		}
		
		[Column(Name="emailsent", Storage="_Emailsent", DbType="Bit")]
		public System.Nullable<bool> Emailsent
		{
			get
			{
				return this._Emailsent;
			}
			set
			{
				if ((this._Emailsent != value))
				{
					this.OnEmailsentChanging(value);
					this.SendPropertyChanging();
					this._Emailsent = value;
					this.SendPropertyChanged("Emailsent");
					this.OnEmailsentChanged();
				}
			}
		}
		
		[Column(Name="bankregnr", Storage="_Bankregnr", DbType="NVarChar(4)")]
		public string Bankregnr
		{
			get
			{
				return this._Bankregnr;
			}
			set
			{
				if ((this._Bankregnr != value))
				{
					this.OnBankregnrChanging(value);
					this.SendPropertyChanging();
					this._Bankregnr = value;
					this.SendPropertyChanged("Bankregnr");
					this.OnBankregnrChanged();
				}
			}
		}
		
		[Column(Name="bankkontonr", Storage="_Bankkontonr", DbType="NVarChar(10)")]
		public string Bankkontonr
		{
			get
			{
				return this._Bankkontonr;
			}
			set
			{
				if ((this._Bankkontonr != value))
				{
					this.OnBankkontonrChanging(value);
					this.SendPropertyChanging();
					this._Bankkontonr = value;
					this.SendPropertyChanged("Bankkontonr");
					this.OnBankkontonrChanged();
				}
			}
		}
		
		[Column(Name="betalingsdato", Storage="_Betalingsdato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Betalingsdato
		{
			get
			{
				return this._Betalingsdato;
			}
			set
			{
				if ((this._Betalingsdato != value))
				{
					this.OnBetalingsdatoChanging(value);
					this.SendPropertyChanging();
					this._Betalingsdato = value;
					this.SendPropertyChanged("Betalingsdato");
					this.OnBetalingsdatoChanged();
				}
			}
		}
		
		[Association(Name="Tbltilpbs_Tbloverforsel", Storage="_Tbltilpbs", ThisKey="Tilpbsid", OtherKey="Id", IsForeignKey=true)]
		public Tbltilpbs Tbltilpbs
		{
			get
			{
				return this._Tbltilpbs.Entity;
			}
			set
			{
				Tbltilpbs previousValue = this._Tbltilpbs.Entity;
				if (((previousValue != value) 
							|| (this._Tbltilpbs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbltilpbs.Entity = null;
						previousValue.Tbloverforsel.Remove(this);
					}
					this._Tbltilpbs.Entity = value;
					if ((value != null))
					{
						value.Tbloverforsel.Add(this);
						this._Tilpbsid = value.Id;
					}
					else
					{
						this._Tilpbsid = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbltilpbs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="tblpbsfile")]
	public partial class Tblpbsfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Pbsfilesid;
		
		private int _Seqnr;
		
		private string _Data;
		
		private EntityRef<Tblpbsfiles> _Tblpbsfiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPbsfilesidChanging(int value);
    partial void OnPbsfilesidChanged();
    partial void OnSeqnrChanging(int value);
    partial void OnSeqnrChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public Tblpbsfile()
		{
			this._Tblpbsfiles = default(EntityRef<Tblpbsfiles>);
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="pbsfilesid", Storage="_Pbsfilesid", DbType="Int NOT NULL")]
		public int Pbsfilesid
		{
			get
			{
				return this._Pbsfilesid;
			}
			set
			{
				if ((this._Pbsfilesid != value))
				{
					this.OnPbsfilesidChanging(value);
					this.SendPropertyChanging();
					this._Pbsfilesid = value;
					this.SendPropertyChanged("Pbsfilesid");
					this.OnPbsfilesidChanged();
				}
			}
		}
		
		[Column(Name="seqnr", Storage="_Seqnr", DbType="Int NOT NULL")]
		public int Seqnr
		{
			get
			{
				return this._Seqnr;
			}
			set
			{
				if ((this._Seqnr != value))
				{
					this.OnSeqnrChanging(value);
					this.SendPropertyChanging();
					this._Seqnr = value;
					this.SendPropertyChanged("Seqnr");
					this.OnSeqnrChanged();
				}
			}
		}
		
		[Column(Name="data", Storage="_Data", DbType="NVarChar(128)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[Association(Name="Tblpbsfiles_Tblpbsfile", Storage="_Tblpbsfiles", ThisKey="Pbsfilesid", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public Tblpbsfiles Tblpbsfiles
		{
			get
			{
				return this._Tblpbsfiles.Entity;
			}
			set
			{
				Tblpbsfiles previousValue = this._Tblpbsfiles.Entity;
				if (((previousValue != value) 
							|| (this._Tblpbsfiles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tblpbsfiles.Entity = null;
						previousValue.Tblpbsfile.Remove(this);
					}
					this._Tblpbsfiles.Entity = value;
					if ((value != null))
					{
						value.Tblpbsfile.Add(this);
						this._Pbsfilesid = value.Id;
					}
					else
					{
						this._Pbsfilesid = default(int);
					}
					this.SendPropertyChanged("Tblpbsfiles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="tblpbsfiles")]
	public partial class Tblpbsfiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Type;
		
		private string _Path;
		
		private string _Filename;
		
		private System.Nullable<int> _Size;
		
		private System.Nullable<System.DateTime> _Atime;
		
		private System.Nullable<System.DateTime> _Mtime;
		
		private string _Perm;
		
		private System.Nullable<int> _Uid;
		
		private System.Nullable<int> _Gid;
		
		private System.Nullable<System.DateTime> _Transmittime;
		
		private System.Nullable<int> _Pbsforsendelseid;
		
		private EntitySet<Tblpbsfile> _Tblpbsfile;
		
		private EntityRef<Tblpbsforsendelse> _Tblpbsforsendelse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnFilenameChanging(string value);
    partial void OnFilenameChanged();
    partial void OnSizeChanging(System.Nullable<int> value);
    partial void OnSizeChanged();
    partial void OnAtimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAtimeChanged();
    partial void OnMtimeChanging(System.Nullable<System.DateTime> value);
    partial void OnMtimeChanged();
    partial void OnPermChanging(string value);
    partial void OnPermChanged();
    partial void OnUidChanging(System.Nullable<int> value);
    partial void OnUidChanged();
    partial void OnGidChanging(System.Nullable<int> value);
    partial void OnGidChanged();
    partial void OnTransmittimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTransmittimeChanged();
    partial void OnPbsforsendelseidChanging(System.Nullable<int> value);
    partial void OnPbsforsendelseidChanged();
    #endregion
		
		public Tblpbsfiles()
		{
			this._Tblpbsfile = new EntitySet<Tblpbsfile>(new Action<Tblpbsfile>(this.attach_Tblpbsfile), new Action<Tblpbsfile>(this.detach_Tblpbsfile));
			this._Tblpbsforsendelse = default(EntityRef<Tblpbsforsendelse>);
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="type", Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Name="path", Storage="_Path", DbType="NVarChar(255)")]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[Column(Name="filename", Storage="_Filename", DbType="NVarChar(50)")]
		public string Filename
		{
			get
			{
				return this._Filename;
			}
			set
			{
				if ((this._Filename != value))
				{
					this.OnFilenameChanging(value);
					this.SendPropertyChanging();
					this._Filename = value;
					this.SendPropertyChanged("Filename");
					this.OnFilenameChanged();
				}
			}
		}
		
		[Column(Name="size", Storage="_Size", DbType="Int")]
		public System.Nullable<int> Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Name="atime", Storage="_Atime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Atime
		{
			get
			{
				return this._Atime;
			}
			set
			{
				if ((this._Atime != value))
				{
					this.OnAtimeChanging(value);
					this.SendPropertyChanging();
					this._Atime = value;
					this.SendPropertyChanged("Atime");
					this.OnAtimeChanged();
				}
			}
		}
		
		[Column(Name="mtime", Storage="_Mtime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Mtime
		{
			get
			{
				return this._Mtime;
			}
			set
			{
				if ((this._Mtime != value))
				{
					this.OnMtimeChanging(value);
					this.SendPropertyChanging();
					this._Mtime = value;
					this.SendPropertyChanged("Mtime");
					this.OnMtimeChanged();
				}
			}
		}
		
		[Column(Name="perm", Storage="_Perm", DbType="NVarChar(50)")]
		public string Perm
		{
			get
			{
				return this._Perm;
			}
			set
			{
				if ((this._Perm != value))
				{
					this.OnPermChanging(value);
					this.SendPropertyChanging();
					this._Perm = value;
					this.SendPropertyChanged("Perm");
					this.OnPermChanged();
				}
			}
		}
		
		[Column(Name="uid", Storage="_Uid", DbType="Int")]
		public System.Nullable<int> Uid
		{
			get
			{
				return this._Uid;
			}
			set
			{
				if ((this._Uid != value))
				{
					this.OnUidChanging(value);
					this.SendPropertyChanging();
					this._Uid = value;
					this.SendPropertyChanged("Uid");
					this.OnUidChanged();
				}
			}
		}
		
		[Column(Name="gid", Storage="_Gid", DbType="Int")]
		public System.Nullable<int> Gid
		{
			get
			{
				return this._Gid;
			}
			set
			{
				if ((this._Gid != value))
				{
					this.OnGidChanging(value);
					this.SendPropertyChanging();
					this._Gid = value;
					this.SendPropertyChanged("Gid");
					this.OnGidChanged();
				}
			}
		}
		
		[Column(Name="transmittime", Storage="_Transmittime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Transmittime
		{
			get
			{
				return this._Transmittime;
			}
			set
			{
				if ((this._Transmittime != value))
				{
					this.OnTransmittimeChanging(value);
					this.SendPropertyChanging();
					this._Transmittime = value;
					this.SendPropertyChanged("Transmittime");
					this.OnTransmittimeChanged();
				}
			}
		}
		
		[Column(Name="pbsforsendelseid", Storage="_Pbsforsendelseid", DbType="Int")]
		public System.Nullable<int> Pbsforsendelseid
		{
			get
			{
				return this._Pbsforsendelseid;
			}
			set
			{
				if ((this._Pbsforsendelseid != value))
				{
					this.OnPbsforsendelseidChanging(value);
					this.SendPropertyChanging();
					this._Pbsforsendelseid = value;
					this.SendPropertyChanged("Pbsforsendelseid");
					this.OnPbsforsendelseidChanged();
				}
			}
		}
		
		[Association(Name="Tblpbsfiles_Tblpbsfile", Storage="_Tblpbsfile", ThisKey="Id", OtherKey="Pbsfilesid")]
		public EntitySet<Tblpbsfile> Tblpbsfile
		{
			get
			{
				return this._Tblpbsfile;
			}
			set
			{
				this._Tblpbsfile.Assign(value);
			}
		}
		
		[Association(Name="Tblpbsforsendelse_Tblpbsfiles", Storage="_Tblpbsforsendelse", ThisKey="Pbsforsendelseid", OtherKey="Id", IsForeignKey=true)]
		public Tblpbsforsendelse Tblpbsforsendelse
		{
			get
			{
				return this._Tblpbsforsendelse.Entity;
			}
			set
			{
				Tblpbsforsendelse previousValue = this._Tblpbsforsendelse.Entity;
				if (((previousValue != value) 
							|| (this._Tblpbsforsendelse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tblpbsforsendelse.Entity = null;
						previousValue.Tblpbsfiles.Remove(this);
					}
					this._Tblpbsforsendelse.Entity = value;
					if ((value != null))
					{
						value.Tblpbsfiles.Add(this);
						this._Pbsforsendelseid = value.Id;
					}
					else
					{
						this._Pbsforsendelseid = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tblpbsforsendelse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tblpbsfile(Tblpbsfile entity)
		{
			this.SendPropertyChanging();
			entity.Tblpbsfiles = this;
		}
		
		private void detach_Tblpbsfile(Tblpbsfile entity)
		{
			this.SendPropertyChanging();
			entity.Tblpbsfiles = null;
		}
	}
	
	[Table(Name="tblpbsforsendelse")]
	public partial class Tblpbsforsendelse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Delsystem;
		
		private string _Leverancetype;
		
		private string _Oprettetaf;
		
		private System.Nullable<System.DateTime> _Oprettet;
		
		private System.Nullable<int> _Leveranceid;
		
		private EntitySet<Tblfrapbs> _Tblfrapbs;
		
		private EntitySet<Tblpbsfiles> _Tblpbsfiles;
		
		private EntitySet<Tbltilpbs> _Tbltilpbs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDelsystemChanging(string value);
    partial void OnDelsystemChanged();
    partial void OnLeverancetypeChanging(string value);
    partial void OnLeverancetypeChanged();
    partial void OnOprettetafChanging(string value);
    partial void OnOprettetafChanged();
    partial void OnOprettetChanging(System.Nullable<System.DateTime> value);
    partial void OnOprettetChanged();
    partial void OnLeveranceidChanging(System.Nullable<int> value);
    partial void OnLeveranceidChanged();
    #endregion
		
		public Tblpbsforsendelse()
		{
			this._Tblfrapbs = new EntitySet<Tblfrapbs>(new Action<Tblfrapbs>(this.attach_Tblfrapbs), new Action<Tblfrapbs>(this.detach_Tblfrapbs));
			this._Tblpbsfiles = new EntitySet<Tblpbsfiles>(new Action<Tblpbsfiles>(this.attach_Tblpbsfiles), new Action<Tblpbsfiles>(this.detach_Tblpbsfiles));
			this._Tbltilpbs = new EntitySet<Tbltilpbs>(new Action<Tbltilpbs>(this.attach_Tbltilpbs), new Action<Tbltilpbs>(this.detach_Tbltilpbs));
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="delsystem", Storage="_Delsystem", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string Delsystem
		{
			get
			{
				return this._Delsystem;
			}
			set
			{
				if ((this._Delsystem != value))
				{
					this.OnDelsystemChanging(value);
					this.SendPropertyChanging();
					this._Delsystem = value;
					this.SendPropertyChanged("Delsystem");
					this.OnDelsystemChanged();
				}
			}
		}
		
		[Column(Name="leverancetype", Storage="_Leverancetype", DbType="NVarChar(4)")]
		public string Leverancetype
		{
			get
			{
				return this._Leverancetype;
			}
			set
			{
				if ((this._Leverancetype != value))
				{
					this.OnLeverancetypeChanging(value);
					this.SendPropertyChanging();
					this._Leverancetype = value;
					this.SendPropertyChanged("Leverancetype");
					this.OnLeverancetypeChanged();
				}
			}
		}
		
		[Column(Name="oprettetaf", Storage="_Oprettetaf", DbType="NVarChar(3)")]
		public string Oprettetaf
		{
			get
			{
				return this._Oprettetaf;
			}
			set
			{
				if ((this._Oprettetaf != value))
				{
					this.OnOprettetafChanging(value);
					this.SendPropertyChanging();
					this._Oprettetaf = value;
					this.SendPropertyChanged("Oprettetaf");
					this.OnOprettetafChanged();
				}
			}
		}
		
		[Column(Name="oprettet", Storage="_Oprettet", DbType="DateTime")]
		public System.Nullable<System.DateTime> Oprettet
		{
			get
			{
				return this._Oprettet;
			}
			set
			{
				if ((this._Oprettet != value))
				{
					this.OnOprettetChanging(value);
					this.SendPropertyChanging();
					this._Oprettet = value;
					this.SendPropertyChanged("Oprettet");
					this.OnOprettetChanged();
				}
			}
		}
		
		[Column(Name="leveranceid", Storage="_Leveranceid", DbType="Int")]
		public System.Nullable<int> Leveranceid
		{
			get
			{
				return this._Leveranceid;
			}
			set
			{
				if ((this._Leveranceid != value))
				{
					this.OnLeveranceidChanging(value);
					this.SendPropertyChanging();
					this._Leveranceid = value;
					this.SendPropertyChanged("Leveranceid");
					this.OnLeveranceidChanged();
				}
			}
		}
		
		[Association(Name="Tblpbsforsendelse_Tblfrapbs", Storage="_Tblfrapbs", ThisKey="Id", OtherKey="Pbsforsendelseid")]
		public EntitySet<Tblfrapbs> Tblfrapbs
		{
			get
			{
				return this._Tblfrapbs;
			}
			set
			{
				this._Tblfrapbs.Assign(value);
			}
		}
		
		[Association(Name="Tblpbsforsendelse_Tblpbsfiles", Storage="_Tblpbsfiles", ThisKey="Id", OtherKey="Pbsforsendelseid")]
		public EntitySet<Tblpbsfiles> Tblpbsfiles
		{
			get
			{
				return this._Tblpbsfiles;
			}
			set
			{
				this._Tblpbsfiles.Assign(value);
			}
		}
		
		[Association(Name="Tblpbsforsendelse_Tbltilpbs", Storage="_Tbltilpbs", ThisKey="Id", OtherKey="Pbsforsendelseid")]
		public EntitySet<Tbltilpbs> Tbltilpbs
		{
			get
			{
				return this._Tbltilpbs;
			}
			set
			{
				this._Tbltilpbs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tblfrapbs(Tblfrapbs entity)
		{
			this.SendPropertyChanging();
			entity.Tblpbsforsendelse = this;
		}
		
		private void detach_Tblfrapbs(Tblfrapbs entity)
		{
			this.SendPropertyChanging();
			entity.Tblpbsforsendelse = null;
		}
		
		private void attach_Tblpbsfiles(Tblpbsfiles entity)
		{
			this.SendPropertyChanging();
			entity.Tblpbsforsendelse = this;
		}
		
		private void detach_Tblpbsfiles(Tblpbsfiles entity)
		{
			this.SendPropertyChanging();
			entity.Tblpbsforsendelse = null;
		}
		
		private void attach_Tbltilpbs(Tbltilpbs entity)
		{
			this.SendPropertyChanging();
			entity.Tblpbsforsendelse = this;
		}
		
		private void detach_Tbltilpbs(Tbltilpbs entity)
		{
			this.SendPropertyChanging();
			entity.Tblpbsforsendelse = null;
		}
	}
	
	[Table(Name="tblpbsnetdir")]
	public partial class Tblpbsnetdir : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Type;
		
		private string _Path;
		
		private string _Filename;
		
		private System.Nullable<int> _Size;
		
		private System.Nullable<System.DateTime> _Atime;
		
		private System.Nullable<System.DateTime> _Mtime;
		
		private string _Perm;
		
		private System.Nullable<int> _Uid;
		
		private System.Nullable<int> _Gid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnFilenameChanging(string value);
    partial void OnFilenameChanged();
    partial void OnSizeChanging(System.Nullable<int> value);
    partial void OnSizeChanged();
    partial void OnAtimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAtimeChanged();
    partial void OnMtimeChanging(System.Nullable<System.DateTime> value);
    partial void OnMtimeChanged();
    partial void OnPermChanging(string value);
    partial void OnPermChanged();
    partial void OnUidChanging(System.Nullable<int> value);
    partial void OnUidChanged();
    partial void OnGidChanging(System.Nullable<int> value);
    partial void OnGidChanged();
    #endregion
		
		public Tblpbsnetdir()
		{
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="type", Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Name="path", Storage="_Path", DbType="NVarChar(255)")]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[Column(Name="filename", Storage="_Filename", DbType="NVarChar(50)")]
		public string Filename
		{
			get
			{
				return this._Filename;
			}
			set
			{
				if ((this._Filename != value))
				{
					this.OnFilenameChanging(value);
					this.SendPropertyChanging();
					this._Filename = value;
					this.SendPropertyChanged("Filename");
					this.OnFilenameChanged();
				}
			}
		}
		
		[Column(Name="size", Storage="_Size", DbType="Int")]
		public System.Nullable<int> Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Name="atime", Storage="_Atime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Atime
		{
			get
			{
				return this._Atime;
			}
			set
			{
				if ((this._Atime != value))
				{
					this.OnAtimeChanging(value);
					this.SendPropertyChanging();
					this._Atime = value;
					this.SendPropertyChanged("Atime");
					this.OnAtimeChanged();
				}
			}
		}
		
		[Column(Name="mtime", Storage="_Mtime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Mtime
		{
			get
			{
				return this._Mtime;
			}
			set
			{
				if ((this._Mtime != value))
				{
					this.OnMtimeChanging(value);
					this.SendPropertyChanging();
					this._Mtime = value;
					this.SendPropertyChanged("Mtime");
					this.OnMtimeChanged();
				}
			}
		}
		
		[Column(Name="perm", Storage="_Perm", DbType="NVarChar(50)")]
		public string Perm
		{
			get
			{
				return this._Perm;
			}
			set
			{
				if ((this._Perm != value))
				{
					this.OnPermChanging(value);
					this.SendPropertyChanging();
					this._Perm = value;
					this.SendPropertyChanged("Perm");
					this.OnPermChanged();
				}
			}
		}
		
		[Column(Name="uid", Storage="_Uid", DbType="Int")]
		public System.Nullable<int> Uid
		{
			get
			{
				return this._Uid;
			}
			set
			{
				if ((this._Uid != value))
				{
					this.OnUidChanging(value);
					this.SendPropertyChanging();
					this._Uid = value;
					this.SendPropertyChanged("Uid");
					this.OnUidChanged();
				}
			}
		}
		
		[Column(Name="gid", Storage="_Gid", DbType="Int")]
		public System.Nullable<int> Gid
		{
			get
			{
				return this._Gid;
			}
			set
			{
				if ((this._Gid != value))
				{
					this.OnGidChanging(value);
					this.SendPropertyChanging();
					this._Gid = value;
					this.SendPropertyChanged("Gid");
					this.OnGidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="tblRegnskab")]
	public partial class TblRegnskab : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Rid;
		
		private string _Navn;
		
		private System.Nullable<System.DateTime> _Oprettet;
		
		private System.Nullable<System.DateTime> _Start;
		
		private System.Nullable<System.DateTime> _Slut;
		
		private System.Nullable<System.DateTime> _DatoLaas;
		
		private string _Firmanavn;
		
		private string _Placering;
		
		private string _Eksportmappe;
		
		private string _TilPBS;
		
		private string _FraPBS;
		
		private System.Nullable<bool> _Afsluttet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRidChanging(int value);
    partial void OnRidChanged();
    partial void OnNavnChanging(string value);
    partial void OnNavnChanged();
    partial void OnOprettetChanging(System.Nullable<System.DateTime> value);
    partial void OnOprettetChanged();
    partial void OnStartChanging(System.Nullable<System.DateTime> value);
    partial void OnStartChanged();
    partial void OnSlutChanging(System.Nullable<System.DateTime> value);
    partial void OnSlutChanged();
    partial void OnDatoLaasChanging(System.Nullable<System.DateTime> value);
    partial void OnDatoLaasChanged();
    partial void OnFirmanavnChanging(string value);
    partial void OnFirmanavnChanged();
    partial void OnPlaceringChanging(string value);
    partial void OnPlaceringChanged();
    partial void OnEksportmappeChanging(string value);
    partial void OnEksportmappeChanged();
    partial void OnTilPBSChanging(string value);
    partial void OnTilPBSChanged();
    partial void OnFraPBSChanging(string value);
    partial void OnFraPBSChanged();
    partial void OnAfsluttetChanging(System.Nullable<bool> value);
    partial void OnAfsluttetChanged();
    #endregion
		
		public TblRegnskab()
		{
			OnCreated();
		}
		
		[Column(Name="rid", Storage="_Rid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Rid
		{
			get
			{
				return this._Rid;
			}
			set
			{
				if ((this._Rid != value))
				{
					this.OnRidChanging(value);
					this.SendPropertyChanging();
					this._Rid = value;
					this.SendPropertyChanged("Rid");
					this.OnRidChanged();
				}
			}
		}
		
		[Column(Storage="_Navn", DbType="NVarChar(50)")]
		public string Navn
		{
			get
			{
				return this._Navn;
			}
			set
			{
				if ((this._Navn != value))
				{
					this.OnNavnChanging(value);
					this.SendPropertyChanging();
					this._Navn = value;
					this.SendPropertyChanged("Navn");
					this.OnNavnChanged();
				}
			}
		}
		
		[Column(Storage="_Oprettet", DbType="DateTime")]
		public System.Nullable<System.DateTime> Oprettet
		{
			get
			{
				return this._Oprettet;
			}
			set
			{
				if ((this._Oprettet != value))
				{
					this.OnOprettetChanging(value);
					this.SendPropertyChanging();
					this._Oprettet = value;
					this.SendPropertyChanged("Oprettet");
					this.OnOprettetChanged();
				}
			}
		}
		
		[Column(Storage="_Start", DbType="DateTime")]
		public System.Nullable<System.DateTime> Start
		{
			get
			{
				return this._Start;
			}
			set
			{
				if ((this._Start != value))
				{
					this.OnStartChanging(value);
					this.SendPropertyChanging();
					this._Start = value;
					this.SendPropertyChanged("Start");
					this.OnStartChanged();
				}
			}
		}
		
		[Column(Storage="_Slut", DbType="DateTime")]
		public System.Nullable<System.DateTime> Slut
		{
			get
			{
				return this._Slut;
			}
			set
			{
				if ((this._Slut != value))
				{
					this.OnSlutChanging(value);
					this.SendPropertyChanging();
					this._Slut = value;
					this.SendPropertyChanged("Slut");
					this.OnSlutChanged();
				}
			}
		}
		
		[Column(Storage="_DatoLaas", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatoLaas
		{
			get
			{
				return this._DatoLaas;
			}
			set
			{
				if ((this._DatoLaas != value))
				{
					this.OnDatoLaasChanging(value);
					this.SendPropertyChanging();
					this._DatoLaas = value;
					this.SendPropertyChanged("DatoLaas");
					this.OnDatoLaasChanged();
				}
			}
		}
		
		[Column(Storage="_Firmanavn", DbType="NVarChar(50)")]
		public string Firmanavn
		{
			get
			{
				return this._Firmanavn;
			}
			set
			{
				if ((this._Firmanavn != value))
				{
					this.OnFirmanavnChanging(value);
					this.SendPropertyChanging();
					this._Firmanavn = value;
					this.SendPropertyChanged("Firmanavn");
					this.OnFirmanavnChanged();
				}
			}
		}
		
		[Column(Storage="_Placering", DbType="NVarChar(255)")]
		public string Placering
		{
			get
			{
				return this._Placering;
			}
			set
			{
				if ((this._Placering != value))
				{
					this.OnPlaceringChanging(value);
					this.SendPropertyChanging();
					this._Placering = value;
					this.SendPropertyChanged("Placering");
					this.OnPlaceringChanged();
				}
			}
		}
		
		[Column(Storage="_Eksportmappe", DbType="NVarChar(255)")]
		public string Eksportmappe
		{
			get
			{
				return this._Eksportmappe;
			}
			set
			{
				if ((this._Eksportmappe != value))
				{
					this.OnEksportmappeChanging(value);
					this.SendPropertyChanging();
					this._Eksportmappe = value;
					this.SendPropertyChanged("Eksportmappe");
					this.OnEksportmappeChanged();
				}
			}
		}
		
		[Column(Storage="_TilPBS", DbType="NVarChar(255)")]
		public string TilPBS
		{
			get
			{
				return this._TilPBS;
			}
			set
			{
				if ((this._TilPBS != value))
				{
					this.OnTilPBSChanging(value);
					this.SendPropertyChanging();
					this._TilPBS = value;
					this.SendPropertyChanged("TilPBS");
					this.OnTilPBSChanged();
				}
			}
		}
		
		[Column(Storage="_FraPBS", DbType="NVarChar(255)")]
		public string FraPBS
		{
			get
			{
				return this._FraPBS;
			}
			set
			{
				if ((this._FraPBS != value))
				{
					this.OnFraPBSChanging(value);
					this.SendPropertyChanging();
					this._FraPBS = value;
					this.SendPropertyChanged("FraPBS");
					this.OnFraPBSChanged();
				}
			}
		}
		
		[Column(Storage="_Afsluttet", DbType="Bit")]
		public System.Nullable<bool> Afsluttet
		{
			get
			{
				return this._Afsluttet;
			}
			set
			{
				if ((this._Afsluttet != value))
				{
					this.OnAfsluttetChanging(value);
					this.SendPropertyChanging();
					this._Afsluttet = value;
					this.SendPropertyChanged("Afsluttet");
					this.OnAfsluttetChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="tblrykker")]
	public partial class Tblrykker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Tilpbsid;
		
		private System.Nullable<System.DateTime> _Betalingsdato;
		
		private System.Nullable<int> _Nr;
		
		private System.Nullable<int> _Faknr;
		
		private string _Advistekst;
		
		private System.Nullable<decimal> _Advisbelob;
		
		private System.Nullable<int> _Infotekst;
		
		private System.Nullable<System.DateTime> _Rykkerdato;
		
		private System.Nullable<System.DateTime> _Maildato;
		
		private EntityRef<Tbltilpbs> _Tbltilpbs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTilpbsidChanging(System.Nullable<int> value);
    partial void OnTilpbsidChanged();
    partial void OnBetalingsdatoChanging(System.Nullable<System.DateTime> value);
    partial void OnBetalingsdatoChanged();
    partial void OnNrChanging(System.Nullable<int> value);
    partial void OnNrChanged();
    partial void OnFaknrChanging(System.Nullable<int> value);
    partial void OnFaknrChanged();
    partial void OnAdvistekstChanging(string value);
    partial void OnAdvistekstChanged();
    partial void OnAdvisbelobChanging(System.Nullable<decimal> value);
    partial void OnAdvisbelobChanged();
    partial void OnInfotekstChanging(System.Nullable<int> value);
    partial void OnInfotekstChanged();
    partial void OnRykkerdatoChanging(System.Nullable<System.DateTime> value);
    partial void OnRykkerdatoChanged();
    partial void OnMaildatoChanging(System.Nullable<System.DateTime> value);
    partial void OnMaildatoChanged();
    #endregion
		
		public Tblrykker()
		{
			this._Tbltilpbs = default(EntityRef<Tbltilpbs>);
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="tilpbsid", Storage="_Tilpbsid", DbType="Int")]
		public System.Nullable<int> Tilpbsid
		{
			get
			{
				return this._Tilpbsid;
			}
			set
			{
				if ((this._Tilpbsid != value))
				{
					this.OnTilpbsidChanging(value);
					this.SendPropertyChanging();
					this._Tilpbsid = value;
					this.SendPropertyChanged("Tilpbsid");
					this.OnTilpbsidChanged();
				}
			}
		}
		
		[Column(Name="betalingsdato", Storage="_Betalingsdato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Betalingsdato
		{
			get
			{
				return this._Betalingsdato;
			}
			set
			{
				if ((this._Betalingsdato != value))
				{
					this.OnBetalingsdatoChanging(value);
					this.SendPropertyChanging();
					this._Betalingsdato = value;
					this.SendPropertyChanged("Betalingsdato");
					this.OnBetalingsdatoChanged();
				}
			}
		}
		
		[Column(Storage="_Nr", DbType="Int")]
		public System.Nullable<int> Nr
		{
			get
			{
				return this._Nr;
			}
			set
			{
				if ((this._Nr != value))
				{
					this.OnNrChanging(value);
					this.SendPropertyChanging();
					this._Nr = value;
					this.SendPropertyChanged("Nr");
					this.OnNrChanged();
				}
			}
		}
		
		[Column(Name="faknr", Storage="_Faknr", DbType="Int")]
		public System.Nullable<int> Faknr
		{
			get
			{
				return this._Faknr;
			}
			set
			{
				if ((this._Faknr != value))
				{
					this.OnFaknrChanging(value);
					this.SendPropertyChanging();
					this._Faknr = value;
					this.SendPropertyChanged("Faknr");
					this.OnFaknrChanged();
				}
			}
		}
		
		[Column(Name="advistekst", Storage="_Advistekst", DbType="NVarChar(4000)")]
		public string Advistekst
		{
			get
			{
				return this._Advistekst;
			}
			set
			{
				if ((this._Advistekst != value))
				{
					this.OnAdvistekstChanging(value);
					this.SendPropertyChanging();
					this._Advistekst = value;
					this.SendPropertyChanged("Advistekst");
					this.OnAdvistekstChanged();
				}
			}
		}
		
		[Column(Name="advisbelob", Storage="_Advisbelob", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Advisbelob
		{
			get
			{
				return this._Advisbelob;
			}
			set
			{
				if ((this._Advisbelob != value))
				{
					this.OnAdvisbelobChanging(value);
					this.SendPropertyChanging();
					this._Advisbelob = value;
					this.SendPropertyChanged("Advisbelob");
					this.OnAdvisbelobChanged();
				}
			}
		}
		
		[Column(Name="infotekst", Storage="_Infotekst", DbType="Int")]
		public System.Nullable<int> Infotekst
		{
			get
			{
				return this._Infotekst;
			}
			set
			{
				if ((this._Infotekst != value))
				{
					this.OnInfotekstChanging(value);
					this.SendPropertyChanging();
					this._Infotekst = value;
					this.SendPropertyChanged("Infotekst");
					this.OnInfotekstChanged();
				}
			}
		}
		
		[Column(Name="rykkerdato", Storage="_Rykkerdato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rykkerdato
		{
			get
			{
				return this._Rykkerdato;
			}
			set
			{
				if ((this._Rykkerdato != value))
				{
					this.OnRykkerdatoChanging(value);
					this.SendPropertyChanging();
					this._Rykkerdato = value;
					this.SendPropertyChanged("Rykkerdato");
					this.OnRykkerdatoChanged();
				}
			}
		}
		
		[Column(Name="maildato", Storage="_Maildato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Maildato
		{
			get
			{
				return this._Maildato;
			}
			set
			{
				if ((this._Maildato != value))
				{
					this.OnMaildatoChanging(value);
					this.SendPropertyChanging();
					this._Maildato = value;
					this.SendPropertyChanged("Maildato");
					this.OnMaildatoChanged();
				}
			}
		}
		
		[Association(Name="Tbltilpbs_Tblrykker", Storage="_Tbltilpbs", ThisKey="Tilpbsid", OtherKey="Id", IsForeignKey=true)]
		public Tbltilpbs Tbltilpbs
		{
			get
			{
				return this._Tbltilpbs.Entity;
			}
			set
			{
				Tbltilpbs previousValue = this._Tbltilpbs.Entity;
				if (((previousValue != value) 
							|| (this._Tbltilpbs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbltilpbs.Entity = null;
						previousValue.Tblrykker.Remove(this);
					}
					this._Tbltilpbs.Entity = value;
					if ((value != null))
					{
						value.Tblrykker.Add(this);
						this._Tilpbsid = value.Id;
					}
					else
					{
						this._Tilpbsid = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbltilpbs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="tblsftp")]
	public partial class Tblsftp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Navn;
		
		private string _Host;
		
		private string _Port;
		
		private string _User;
		
		private string _Outbound;
		
		private string _Inbound;
		
		private string _Pincode;
		
		private string _Certificate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNavnChanging(string value);
    partial void OnNavnChanged();
    partial void OnHostChanging(string value);
    partial void OnHostChanged();
    partial void OnPortChanging(string value);
    partial void OnPortChanged();
    partial void OnUserChanging(string value);
    partial void OnUserChanged();
    partial void OnOutboundChanging(string value);
    partial void OnOutboundChanged();
    partial void OnInboundChanging(string value);
    partial void OnInboundChanged();
    partial void OnPincodeChanging(string value);
    partial void OnPincodeChanged();
    partial void OnCertificateChanging(string value);
    partial void OnCertificateChanged();
    #endregion
		
		public Tblsftp()
		{
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="navn", Storage="_Navn", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Navn
		{
			get
			{
				return this._Navn;
			}
			set
			{
				if ((this._Navn != value))
				{
					this.OnNavnChanging(value);
					this.SendPropertyChanging();
					this._Navn = value;
					this.SendPropertyChanged("Navn");
					this.OnNavnChanged();
				}
			}
		}
		
		[Column(Name="host", Storage="_Host", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Host
		{
			get
			{
				return this._Host;
			}
			set
			{
				if ((this._Host != value))
				{
					this.OnHostChanging(value);
					this.SendPropertyChanging();
					this._Host = value;
					this.SendPropertyChanged("Host");
					this.OnHostChanged();
				}
			}
		}
		
		[Column(Name="port", Storage="_Port", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}
		
		[Column(Name="user", Storage="_User", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string User
		{
			get
			{
				return this._User;
			}
			set
			{
				if ((this._User != value))
				{
					this.OnUserChanging(value);
					this.SendPropertyChanging();
					this._User = value;
					this.SendPropertyChanged("User");
					this.OnUserChanged();
				}
			}
		}
		
		[Column(Name="outbound", Storage="_Outbound", DbType="NVarChar(64)")]
		public string Outbound
		{
			get
			{
				return this._Outbound;
			}
			set
			{
				if ((this._Outbound != value))
				{
					this.OnOutboundChanging(value);
					this.SendPropertyChanging();
					this._Outbound = value;
					this.SendPropertyChanged("Outbound");
					this.OnOutboundChanged();
				}
			}
		}
		
		[Column(Name="inbound", Storage="_Inbound", DbType="NVarChar(64)")]
		public string Inbound
		{
			get
			{
				return this._Inbound;
			}
			set
			{
				if ((this._Inbound != value))
				{
					this.OnInboundChanging(value);
					this.SendPropertyChanging();
					this._Inbound = value;
					this.SendPropertyChanged("Inbound");
					this.OnInboundChanged();
				}
			}
		}
		
		[Column(Name="pincode", Storage="_Pincode", DbType="NVarChar(64)")]
		public string Pincode
		{
			get
			{
				return this._Pincode;
			}
			set
			{
				if ((this._Pincode != value))
				{
					this.OnPincodeChanging(value);
					this.SendPropertyChanging();
					this._Pincode = value;
					this.SendPropertyChanged("Pincode");
					this.OnPincodeChanged();
				}
			}
		}
		
		[Column(Name="certificate", Storage="_Certificate", DbType="NVarChar(4000)")]
		public string Certificate
		{
			get
			{
				return this._Certificate;
			}
			set
			{
				if ((this._Certificate != value))
				{
					this.OnCertificateChanging(value);
					this.SendPropertyChanging();
					this._Certificate = value;
					this.SendPropertyChanged("Certificate");
					this.OnCertificateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="tblsync")]
	public partial class Tblsync : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Nr;
		
		private byte _Source;
		
		private int _Source_id;
		
		private byte _Field_id;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNrChanging(int value);
    partial void OnNrChanged();
    partial void OnSourceChanging(byte value);
    partial void OnSourceChanged();
    partial void OnSource_idChanging(int value);
    partial void OnSource_idChanged();
    partial void OnField_idChanging(byte value);
    partial void OnField_idChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public Tblsync()
		{
			OnCreated();
		}
		
		[Column(Name="nr", Storage="_Nr", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Nr
		{
			get
			{
				return this._Nr;
			}
			set
			{
				if ((this._Nr != value))
				{
					this.OnNrChanging(value);
					this.SendPropertyChanging();
					this._Nr = value;
					this.SendPropertyChanged("Nr");
					this.OnNrChanged();
				}
			}
		}
		
		[Column(Name="source", Storage="_Source", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[Column(Name="source_id", Storage="_Source_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Source_id
		{
			get
			{
				return this._Source_id;
			}
			set
			{
				if ((this._Source_id != value))
				{
					this.OnSource_idChanging(value);
					this.SendPropertyChanging();
					this._Source_id = value;
					this.SendPropertyChanged("Source_id");
					this.OnSource_idChanged();
				}
			}
		}
		
		[Column(Name="field_id", Storage="_Field_id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Field_id
		{
			get
			{
				return this._Field_id;
			}
			set
			{
				if ((this._Field_id != value))
				{
					this.OnField_idChanging(value);
					this.SendPropertyChanging();
					this._Field_id = value;
					this.SendPropertyChanged("Field_id");
					this.OnField_idChanged();
				}
			}
		}
		
		[Column(Name="value", Storage="_Value", DbType="NVarChar(4000)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="tblSysinfo")]
	public partial class TblSysinfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Vkey;
		
		private string _Val;
		
		private int _Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVkeyChanging(string value);
    partial void OnVkeyChanged();
    partial void OnValChanging(string value);
    partial void OnValChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public TblSysinfo()
		{
			OnCreated();
		}
		
		[Column(Name="vkey", Storage="_Vkey", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Vkey
		{
			get
			{
				return this._Vkey;
			}
			set
			{
				if ((this._Vkey != value))
				{
					this.OnVkeyChanging(value);
					this.SendPropertyChanging();
					this._Vkey = value;
					this.SendPropertyChanged("Vkey");
					this.OnVkeyChanged();
				}
			}
		}
		
		[Column(Name="val", Storage="_Val", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Val
		{
			get
			{
				return this._Val;
			}
			set
			{
				if ((this._Val != value))
				{
					this.OnValChanging(value);
					this.SendPropertyChanging();
					this._Val = value;
					this.SendPropertyChanged("Val");
					this.OnValChanged();
				}
			}
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="tbltilpbs")]
	public partial class Tbltilpbs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Delsystem;
		
		private string _Leverancetype;
		
		private System.Nullable<System.DateTime> _Bilagdato;
		
		private System.Nullable<int> _Pbsforsendelseid;
		
		private System.Nullable<System.DateTime> _Udtrukket;
		
		private string _Leverancespecifikation;
		
		private System.Nullable<System.DateTime> _Leverancedannelsesdato;
		
		private EntitySet<Tblfak> _Tblfak;
		
		private EntitySet<Tbloverforsel> _Tbloverforsel;
		
		private EntitySet<Tblrykker> _Tblrykker;
		
		private EntityRef<Tblpbsforsendelse> _Tblpbsforsendelse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDelsystemChanging(string value);
    partial void OnDelsystemChanged();
    partial void OnLeverancetypeChanging(string value);
    partial void OnLeverancetypeChanged();
    partial void OnBilagdatoChanging(System.Nullable<System.DateTime> value);
    partial void OnBilagdatoChanged();
    partial void OnPbsforsendelseidChanging(System.Nullable<int> value);
    partial void OnPbsforsendelseidChanged();
    partial void OnUdtrukketChanging(System.Nullable<System.DateTime> value);
    partial void OnUdtrukketChanged();
    partial void OnLeverancespecifikationChanging(string value);
    partial void OnLeverancespecifikationChanged();
    partial void OnLeverancedannelsesdatoChanging(System.Nullable<System.DateTime> value);
    partial void OnLeverancedannelsesdatoChanged();
    #endregion
		
		public Tbltilpbs()
		{
			this._Tblfak = new EntitySet<Tblfak>(new Action<Tblfak>(this.attach_Tblfak), new Action<Tblfak>(this.detach_Tblfak));
			this._Tbloverforsel = new EntitySet<Tbloverforsel>(new Action<Tbloverforsel>(this.attach_Tbloverforsel), new Action<Tbloverforsel>(this.detach_Tbloverforsel));
			this._Tblrykker = new EntitySet<Tblrykker>(new Action<Tblrykker>(this.attach_Tblrykker), new Action<Tblrykker>(this.detach_Tblrykker));
			this._Tblpbsforsendelse = default(EntityRef<Tblpbsforsendelse>);
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="delsystem", Storage="_Delsystem", DbType="NVarChar(3)")]
		public string Delsystem
		{
			get
			{
				return this._Delsystem;
			}
			set
			{
				if ((this._Delsystem != value))
				{
					this.OnDelsystemChanging(value);
					this.SendPropertyChanging();
					this._Delsystem = value;
					this.SendPropertyChanged("Delsystem");
					this.OnDelsystemChanged();
				}
			}
		}
		
		[Column(Name="leverancetype", Storage="_Leverancetype", DbType="NVarChar(4)")]
		public string Leverancetype
		{
			get
			{
				return this._Leverancetype;
			}
			set
			{
				if ((this._Leverancetype != value))
				{
					this.OnLeverancetypeChanging(value);
					this.SendPropertyChanging();
					this._Leverancetype = value;
					this.SendPropertyChanged("Leverancetype");
					this.OnLeverancetypeChanged();
				}
			}
		}
		
		[Column(Name="bilagdato", Storage="_Bilagdato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Bilagdato
		{
			get
			{
				return this._Bilagdato;
			}
			set
			{
				if ((this._Bilagdato != value))
				{
					this.OnBilagdatoChanging(value);
					this.SendPropertyChanging();
					this._Bilagdato = value;
					this.SendPropertyChanged("Bilagdato");
					this.OnBilagdatoChanged();
				}
			}
		}
		
		[Column(Name="pbsforsendelseid", Storage="_Pbsforsendelseid", DbType="Int")]
		public System.Nullable<int> Pbsforsendelseid
		{
			get
			{
				return this._Pbsforsendelseid;
			}
			set
			{
				if ((this._Pbsforsendelseid != value))
				{
					this.OnPbsforsendelseidChanging(value);
					this.SendPropertyChanging();
					this._Pbsforsendelseid = value;
					this.SendPropertyChanged("Pbsforsendelseid");
					this.OnPbsforsendelseidChanged();
				}
			}
		}
		
		[Column(Name="udtrukket", Storage="_Udtrukket", DbType="DateTime")]
		public System.Nullable<System.DateTime> Udtrukket
		{
			get
			{
				return this._Udtrukket;
			}
			set
			{
				if ((this._Udtrukket != value))
				{
					this.OnUdtrukketChanging(value);
					this.SendPropertyChanging();
					this._Udtrukket = value;
					this.SendPropertyChanged("Udtrukket");
					this.OnUdtrukketChanged();
				}
			}
		}
		
		[Column(Name="leverancespecifikation", Storage="_Leverancespecifikation", DbType="NVarChar(10)")]
		public string Leverancespecifikation
		{
			get
			{
				return this._Leverancespecifikation;
			}
			set
			{
				if ((this._Leverancespecifikation != value))
				{
					this.OnLeverancespecifikationChanging(value);
					this.SendPropertyChanging();
					this._Leverancespecifikation = value;
					this.SendPropertyChanged("Leverancespecifikation");
					this.OnLeverancespecifikationChanged();
				}
			}
		}
		
		[Column(Name="leverancedannelsesdato", Storage="_Leverancedannelsesdato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Leverancedannelsesdato
		{
			get
			{
				return this._Leverancedannelsesdato;
			}
			set
			{
				if ((this._Leverancedannelsesdato != value))
				{
					this.OnLeverancedannelsesdatoChanging(value);
					this.SendPropertyChanging();
					this._Leverancedannelsesdato = value;
					this.SendPropertyChanged("Leverancedannelsesdato");
					this.OnLeverancedannelsesdatoChanged();
				}
			}
		}
		
		[Association(Name="Tbltilpbs_Tblfak", Storage="_Tblfak", ThisKey="Id", OtherKey="Tilpbsid")]
		public EntitySet<Tblfak> Tblfak
		{
			get
			{
				return this._Tblfak;
			}
			set
			{
				this._Tblfak.Assign(value);
			}
		}
		
		[Association(Name="Tbltilpbs_Tbloverforsel", Storage="_Tbloverforsel", ThisKey="Id", OtherKey="Tilpbsid")]
		public EntitySet<Tbloverforsel> Tbloverforsel
		{
			get
			{
				return this._Tbloverforsel;
			}
			set
			{
				this._Tbloverforsel.Assign(value);
			}
		}
		
		[Association(Name="Tbltilpbs_Tblrykker", Storage="_Tblrykker", ThisKey="Id", OtherKey="Tilpbsid")]
		public EntitySet<Tblrykker> Tblrykker
		{
			get
			{
				return this._Tblrykker;
			}
			set
			{
				this._Tblrykker.Assign(value);
			}
		}
		
		[Association(Name="Tblpbsforsendelse_Tbltilpbs", Storage="_Tblpbsforsendelse", ThisKey="Pbsforsendelseid", OtherKey="Id", IsForeignKey=true)]
		public Tblpbsforsendelse Tblpbsforsendelse
		{
			get
			{
				return this._Tblpbsforsendelse.Entity;
			}
			set
			{
				Tblpbsforsendelse previousValue = this._Tblpbsforsendelse.Entity;
				if (((previousValue != value) 
							|| (this._Tblpbsforsendelse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tblpbsforsendelse.Entity = null;
						previousValue.Tbltilpbs.Remove(this);
					}
					this._Tblpbsforsendelse.Entity = value;
					if ((value != null))
					{
						value.Tbltilpbs.Add(this);
						this._Pbsforsendelseid = value.Id;
					}
					else
					{
						this._Pbsforsendelseid = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tblpbsforsendelse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tblfak(Tblfak entity)
		{
			this.SendPropertyChanging();
			entity.Tbltilpbs = this;
		}
		
		private void detach_Tblfak(Tblfak entity)
		{
			this.SendPropertyChanging();
			entity.Tbltilpbs = null;
		}
		
		private void attach_Tbloverforsel(Tbloverforsel entity)
		{
			this.SendPropertyChanging();
			entity.Tbltilpbs = this;
		}
		
		private void detach_Tbloverforsel(Tbloverforsel entity)
		{
			this.SendPropertyChanging();
			entity.Tbltilpbs = null;
		}
		
		private void attach_Tblrykker(Tblrykker entity)
		{
			this.SendPropertyChanging();
			entity.Tbltilpbs = this;
		}
		
		private void detach_Tblrykker(Tblrykker entity)
		{
			this.SendPropertyChanging();
			entity.Tbltilpbs = null;
		}
	}
	
	[Table(Name="tempBetalforslag")]
	public partial class TempBetalforslag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Betalingsdato;
		
		private EntitySet<TempBetalforslaglinie> _TempBetalforslaglinie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBetalingsdatoChanging(System.DateTime value);
    partial void OnBetalingsdatoChanged();
    #endregion
		
		public TempBetalforslag()
		{
			this._TempBetalforslaglinie = new EntitySet<TempBetalforslaglinie>(new Action<TempBetalforslaglinie>(this.attach_TempBetalforslaglinie), new Action<TempBetalforslaglinie>(this.detach_TempBetalforslaglinie));
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="betalingsdato", Storage="_Betalingsdato", DbType="DateTime NOT NULL")]
		public System.DateTime Betalingsdato
		{
			get
			{
				return this._Betalingsdato;
			}
			set
			{
				if ((this._Betalingsdato != value))
				{
					this.OnBetalingsdatoChanging(value);
					this.SendPropertyChanging();
					this._Betalingsdato = value;
					this.SendPropertyChanged("Betalingsdato");
					this.OnBetalingsdatoChanged();
				}
			}
		}
		
		[Association(Name="TempBetalforslag_TempBetalforslaglinie", Storage="_TempBetalforslaglinie", ThisKey="Id", OtherKey="Betalforslagid")]
		public EntitySet<TempBetalforslaglinie> TempBetalforslaglinie
		{
			get
			{
				return this._TempBetalforslaglinie;
			}
			set
			{
				this._TempBetalforslaglinie.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TempBetalforslaglinie(TempBetalforslaglinie entity)
		{
			this.SendPropertyChanging();
			entity.TempBetalforslag = this;
		}
		
		private void detach_TempBetalforslaglinie(TempBetalforslaglinie entity)
		{
			this.SendPropertyChanging();
			entity.TempBetalforslag = null;
		}
	}
	
	[Table(Name="tempBetalforslaglinie")]
	public partial class TempBetalforslaglinie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Nr;
		
		private int _Betalforslagid;
		
		private decimal _Advisbelob;
		
		private System.Nullable<int> _Fakid;
		
		private string _Bankregnr;
		
		private string _Bankkontonr;
		
		private System.Nullable<int> _Faknr;
		
		private EntityRef<TempBetalforslag> _TempBetalforslag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNrChanging(int value);
    partial void OnNrChanged();
    partial void OnBetalforslagidChanging(int value);
    partial void OnBetalforslagidChanged();
    partial void OnAdvisbelobChanging(decimal value);
    partial void OnAdvisbelobChanged();
    partial void OnFakidChanging(System.Nullable<int> value);
    partial void OnFakidChanged();
    partial void OnBankregnrChanging(string value);
    partial void OnBankregnrChanged();
    partial void OnBankkontonrChanging(string value);
    partial void OnBankkontonrChanged();
    partial void OnFaknrChanging(System.Nullable<int> value);
    partial void OnFaknrChanged();
    #endregion
		
		public TempBetalforslaglinie()
		{
			this._TempBetalforslag = default(EntityRef<TempBetalforslag>);
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Nr", DbType="Int NOT NULL")]
		public int Nr
		{
			get
			{
				return this._Nr;
			}
			set
			{
				if ((this._Nr != value))
				{
					this.OnNrChanging(value);
					this.SendPropertyChanging();
					this._Nr = value;
					this.SendPropertyChanged("Nr");
					this.OnNrChanged();
				}
			}
		}
		
		[Column(Storage="_Betalforslagid", DbType="Int NOT NULL")]
		public int Betalforslagid
		{
			get
			{
				return this._Betalforslagid;
			}
			set
			{
				if ((this._Betalforslagid != value))
				{
					if (this._TempBetalforslag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBetalforslagidChanging(value);
					this.SendPropertyChanging();
					this._Betalforslagid = value;
					this.SendPropertyChanged("Betalforslagid");
					this.OnBetalforslagidChanged();
				}
			}
		}
		
		[Column(Name="advisbelob", Storage="_Advisbelob", DbType="Decimal(18,2) NOT NULL")]
		public decimal Advisbelob
		{
			get
			{
				return this._Advisbelob;
			}
			set
			{
				if ((this._Advisbelob != value))
				{
					this.OnAdvisbelobChanging(value);
					this.SendPropertyChanging();
					this._Advisbelob = value;
					this.SendPropertyChanged("Advisbelob");
					this.OnAdvisbelobChanged();
				}
			}
		}
		
		[Column(Name="fakid", Storage="_Fakid", DbType="Int")]
		public System.Nullable<int> Fakid
		{
			get
			{
				return this._Fakid;
			}
			set
			{
				if ((this._Fakid != value))
				{
					this.OnFakidChanging(value);
					this.SendPropertyChanging();
					this._Fakid = value;
					this.SendPropertyChanged("Fakid");
					this.OnFakidChanged();
				}
			}
		}
		
		[Column(Name="bankregnr", Storage="_Bankregnr", DbType="NVarChar(4)")]
		public string Bankregnr
		{
			get
			{
				return this._Bankregnr;
			}
			set
			{
				if ((this._Bankregnr != value))
				{
					this.OnBankregnrChanging(value);
					this.SendPropertyChanging();
					this._Bankregnr = value;
					this.SendPropertyChanged("Bankregnr");
					this.OnBankregnrChanged();
				}
			}
		}
		
		[Column(Name="bankkontonr", Storage="_Bankkontonr", DbType="NVarChar(10)")]
		public string Bankkontonr
		{
			get
			{
				return this._Bankkontonr;
			}
			set
			{
				if ((this._Bankkontonr != value))
				{
					this.OnBankkontonrChanging(value);
					this.SendPropertyChanging();
					this._Bankkontonr = value;
					this.SendPropertyChanged("Bankkontonr");
					this.OnBankkontonrChanged();
				}
			}
		}
		
		[Column(Name="faknr", Storage="_Faknr", DbType="Int")]
		public System.Nullable<int> Faknr
		{
			get
			{
				return this._Faknr;
			}
			set
			{
				if ((this._Faknr != value))
				{
					this.OnFaknrChanging(value);
					this.SendPropertyChanging();
					this._Faknr = value;
					this.SendPropertyChanged("Faknr");
					this.OnFaknrChanged();
				}
			}
		}
		
		[Association(Name="TempBetalforslag_TempBetalforslaglinie", Storage="_TempBetalforslag", ThisKey="Betalforslagid", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public TempBetalforslag TempBetalforslag
		{
			get
			{
				return this._TempBetalforslag.Entity;
			}
			set
			{
				TempBetalforslag previousValue = this._TempBetalforslag.Entity;
				if (((previousValue != value) 
							|| (this._TempBetalforslag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TempBetalforslag.Entity = null;
						previousValue.TempBetalforslaglinie.Remove(this);
					}
					this._TempBetalforslag.Entity = value;
					if ((value != null))
					{
						value.TempBetalforslaglinie.Add(this);
						this._Betalforslagid = value.Id;
					}
					else
					{
						this._Betalforslagid = default(int);
					}
					this.SendPropertyChanged("TempBetalforslag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="tempKontforslag")]
	public partial class TempKontforslag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Betalingsdato;
		
		private System.Nullable<bool> _Bsh;
		
		private EntitySet<TempKontforslaglinie> _TempKontforslaglinie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBetalingsdatoChanging(System.DateTime value);
    partial void OnBetalingsdatoChanged();
    partial void OnBshChanging(System.Nullable<bool> value);
    partial void OnBshChanged();
    #endregion
		
		public TempKontforslag()
		{
			this._TempKontforslaglinie = new EntitySet<TempKontforslaglinie>(new Action<TempKontforslaglinie>(this.attach_TempKontforslaglinie), new Action<TempKontforslaglinie>(this.detach_TempKontforslaglinie));
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="betalingsdato", Storage="_Betalingsdato", DbType="DateTime NOT NULL")]
		public System.DateTime Betalingsdato
		{
			get
			{
				return this._Betalingsdato;
			}
			set
			{
				if ((this._Betalingsdato != value))
				{
					this.OnBetalingsdatoChanging(value);
					this.SendPropertyChanging();
					this._Betalingsdato = value;
					this.SendPropertyChanged("Betalingsdato");
					this.OnBetalingsdatoChanged();
				}
			}
		}
		
		[Column(Name="bsh", Storage="_Bsh", DbType="Bit")]
		public System.Nullable<bool> Bsh
		{
			get
			{
				return this._Bsh;
			}
			set
			{
				if ((this._Bsh != value))
				{
					this.OnBshChanging(value);
					this.SendPropertyChanging();
					this._Bsh = value;
					this.SendPropertyChanged("Bsh");
					this.OnBshChanged();
				}
			}
		}
		
		[Association(Name="TempKontforslag_TempKontforslaglinie", Storage="_TempKontforslaglinie", ThisKey="Id", OtherKey="Kontforslagid")]
		public EntitySet<TempKontforslaglinie> TempKontforslaglinie
		{
			get
			{
				return this._TempKontforslaglinie;
			}
			set
			{
				this._TempKontforslaglinie.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TempKontforslaglinie(TempKontforslaglinie entity)
		{
			this.SendPropertyChanging();
			entity.TempKontforslag = this;
		}
		
		private void detach_TempKontforslaglinie(TempKontforslaglinie entity)
		{
			this.SendPropertyChanging();
			entity.TempKontforslag = null;
		}
	}
	
	[Table(Name="tempKontforslaglinie")]
	public partial class TempKontforslaglinie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Nr;
		
		private int _Kontforslagid;
		
		private System.DateTime _Fradato;
		
		private decimal _Advisbelob;
		
		private System.Nullable<System.DateTime> _Tildato;
		
		private bool _Tilmeldtpbs;
		
		private bool _Indmeldelse;
		
		private EntityRef<TempKontforslag> _TempKontforslag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNrChanging(int value);
    partial void OnNrChanged();
    partial void OnKontforslagidChanging(int value);
    partial void OnKontforslagidChanged();
    partial void OnFradatoChanging(System.DateTime value);
    partial void OnFradatoChanged();
    partial void OnAdvisbelobChanging(decimal value);
    partial void OnAdvisbelobChanged();
    partial void OnTildatoChanging(System.Nullable<System.DateTime> value);
    partial void OnTildatoChanged();
    partial void OnTilmeldtpbsChanging(bool value);
    partial void OnTilmeldtpbsChanged();
    partial void OnIndmeldelseChanging(bool value);
    partial void OnIndmeldelseChanged();
    #endregion
		
		public TempKontforslaglinie()
		{
			this._TempKontforslag = default(EntityRef<TempKontforslag>);
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Nr", DbType="Int NOT NULL")]
		public int Nr
		{
			get
			{
				return this._Nr;
			}
			set
			{
				if ((this._Nr != value))
				{
					this.OnNrChanging(value);
					this.SendPropertyChanging();
					this._Nr = value;
					this.SendPropertyChanged("Nr");
					this.OnNrChanged();
				}
			}
		}
		
		[Column(Storage="_Kontforslagid", DbType="Int NOT NULL")]
		public int Kontforslagid
		{
			get
			{
				return this._Kontforslagid;
			}
			set
			{
				if ((this._Kontforslagid != value))
				{
					if (this._TempKontforslag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKontforslagidChanging(value);
					this.SendPropertyChanging();
					this._Kontforslagid = value;
					this.SendPropertyChanged("Kontforslagid");
					this.OnKontforslagidChanged();
				}
			}
		}
		
		[Column(Name="fradato", Storage="_Fradato", DbType="DateTime NOT NULL")]
		public System.DateTime Fradato
		{
			get
			{
				return this._Fradato;
			}
			set
			{
				if ((this._Fradato != value))
				{
					this.OnFradatoChanging(value);
					this.SendPropertyChanging();
					this._Fradato = value;
					this.SendPropertyChanged("Fradato");
					this.OnFradatoChanged();
				}
			}
		}
		
		[Column(Name="advisbelob", Storage="_Advisbelob", DbType="Decimal(18,2) NOT NULL")]
		public decimal Advisbelob
		{
			get
			{
				return this._Advisbelob;
			}
			set
			{
				if ((this._Advisbelob != value))
				{
					this.OnAdvisbelobChanging(value);
					this.SendPropertyChanging();
					this._Advisbelob = value;
					this.SendPropertyChanged("Advisbelob");
					this.OnAdvisbelobChanged();
				}
			}
		}
		
		[Column(Name="tildato", Storage="_Tildato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Tildato
		{
			get
			{
				return this._Tildato;
			}
			set
			{
				if ((this._Tildato != value))
				{
					this.OnTildatoChanging(value);
					this.SendPropertyChanging();
					this._Tildato = value;
					this.SendPropertyChanged("Tildato");
					this.OnTildatoChanged();
				}
			}
		}
		
		[Column(Name="tilmeldtpbs", Storage="_Tilmeldtpbs", DbType="Bit NOT NULL")]
		public bool Tilmeldtpbs
		{
			get
			{
				return this._Tilmeldtpbs;
			}
			set
			{
				if ((this._Tilmeldtpbs != value))
				{
					this.OnTilmeldtpbsChanging(value);
					this.SendPropertyChanging();
					this._Tilmeldtpbs = value;
					this.SendPropertyChanged("Tilmeldtpbs");
					this.OnTilmeldtpbsChanged();
				}
			}
		}
		
		[Column(Name="indmeldelse", Storage="_Indmeldelse", DbType="Bit NOT NULL")]
		public bool Indmeldelse
		{
			get
			{
				return this._Indmeldelse;
			}
			set
			{
				if ((this._Indmeldelse != value))
				{
					this.OnIndmeldelseChanging(value);
					this.SendPropertyChanging();
					this._Indmeldelse = value;
					this.SendPropertyChanged("Indmeldelse");
					this.OnIndmeldelseChanged();
				}
			}
		}
		
		[Association(Name="TempKontforslag_TempKontforslaglinie", Storage="_TempKontforslag", ThisKey="Kontforslagid", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public TempKontforslag TempKontforslag
		{
			get
			{
				return this._TempKontforslag.Entity;
			}
			set
			{
				TempKontforslag previousValue = this._TempKontforslag.Entity;
				if (((previousValue != value) 
							|| (this._TempKontforslag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TempKontforslag.Entity = null;
						previousValue.TempKontforslaglinie.Remove(this);
					}
					this._TempKontforslag.Entity = value;
					if ((value != null))
					{
						value.TempKontforslaglinie.Add(this);
						this._Kontforslagid = value.Id;
					}
					else
					{
						this._Kontforslagid = default(int);
					}
					this.SendPropertyChanged("TempKontforslag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="tempRykkerforslag")]
	public partial class TempRykkerforslag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Betalingsdato;
		
		private System.Nullable<bool> _Bsh;
		
		private EntitySet<TempRykkerforslaglinie> _TempRykkerforslaglinie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBetalingsdatoChanging(System.DateTime value);
    partial void OnBetalingsdatoChanged();
    partial void OnBshChanging(System.Nullable<bool> value);
    partial void OnBshChanged();
    #endregion
		
		public TempRykkerforslag()
		{
			this._TempRykkerforslaglinie = new EntitySet<TempRykkerforslaglinie>(new Action<TempRykkerforslaglinie>(this.attach_TempRykkerforslaglinie), new Action<TempRykkerforslaglinie>(this.detach_TempRykkerforslaglinie));
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="betalingsdato", Storage="_Betalingsdato", DbType="DateTime NOT NULL")]
		public System.DateTime Betalingsdato
		{
			get
			{
				return this._Betalingsdato;
			}
			set
			{
				if ((this._Betalingsdato != value))
				{
					this.OnBetalingsdatoChanging(value);
					this.SendPropertyChanging();
					this._Betalingsdato = value;
					this.SendPropertyChanged("Betalingsdato");
					this.OnBetalingsdatoChanged();
				}
			}
		}
		
		[Column(Name="bsh", Storage="_Bsh", DbType="Bit")]
		public System.Nullable<bool> Bsh
		{
			get
			{
				return this._Bsh;
			}
			set
			{
				if ((this._Bsh != value))
				{
					this.OnBshChanging(value);
					this.SendPropertyChanging();
					this._Bsh = value;
					this.SendPropertyChanged("Bsh");
					this.OnBshChanged();
				}
			}
		}
		
		[Association(Name="TempRykkerforslag_TempRykkerforslaglinie", Storage="_TempRykkerforslaglinie", ThisKey="Id", OtherKey="Rykkerforslagid")]
		public EntitySet<TempRykkerforslaglinie> TempRykkerforslaglinie
		{
			get
			{
				return this._TempRykkerforslaglinie;
			}
			set
			{
				this._TempRykkerforslaglinie.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TempRykkerforslaglinie(TempRykkerforslaglinie entity)
		{
			this.SendPropertyChanging();
			entity.TempRykkerforslag = this;
		}
		
		private void detach_TempRykkerforslaglinie(TempRykkerforslaglinie entity)
		{
			this.SendPropertyChanging();
			entity.TempRykkerforslag = null;
		}
	}
	
	[Table(Name="tempRykkerforslaglinie")]
	public partial class TempRykkerforslaglinie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Rykkerforslagid;
		
		private int _Nr;
		
		private int _Faknr;
		
		private string _Advistekst;
		
		private decimal _Advisbelob;
		
		private EntityRef<TempRykkerforslag> _TempRykkerforslag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRykkerforslagidChanging(int value);
    partial void OnRykkerforslagidChanged();
    partial void OnNrChanging(int value);
    partial void OnNrChanged();
    partial void OnFaknrChanging(int value);
    partial void OnFaknrChanged();
    partial void OnAdvistekstChanging(string value);
    partial void OnAdvistekstChanged();
    partial void OnAdvisbelobChanging(decimal value);
    partial void OnAdvisbelobChanged();
    #endregion
		
		public TempRykkerforslaglinie()
		{
			this._TempRykkerforslag = default(EntityRef<TempRykkerforslag>);
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Rykkerforslagid", DbType="Int NOT NULL")]
		public int Rykkerforslagid
		{
			get
			{
				return this._Rykkerforslagid;
			}
			set
			{
				if ((this._Rykkerforslagid != value))
				{
					if (this._TempRykkerforslag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRykkerforslagidChanging(value);
					this.SendPropertyChanging();
					this._Rykkerforslagid = value;
					this.SendPropertyChanged("Rykkerforslagid");
					this.OnRykkerforslagidChanged();
				}
			}
		}
		
		[Column(Storage="_Nr", DbType="Int NOT NULL")]
		public int Nr
		{
			get
			{
				return this._Nr;
			}
			set
			{
				if ((this._Nr != value))
				{
					this.OnNrChanging(value);
					this.SendPropertyChanging();
					this._Nr = value;
					this.SendPropertyChanged("Nr");
					this.OnNrChanged();
				}
			}
		}
		
		[Column(Name="faknr", Storage="_Faknr", DbType="Int NOT NULL")]
		public int Faknr
		{
			get
			{
				return this._Faknr;
			}
			set
			{
				if ((this._Faknr != value))
				{
					this.OnFaknrChanging(value);
					this.SendPropertyChanging();
					this._Faknr = value;
					this.SendPropertyChanged("Faknr");
					this.OnFaknrChanged();
				}
			}
		}
		
		[Column(Name="advistekst", Storage="_Advistekst", DbType="NVarChar(4000)")]
		public string Advistekst
		{
			get
			{
				return this._Advistekst;
			}
			set
			{
				if ((this._Advistekst != value))
				{
					this.OnAdvistekstChanging(value);
					this.SendPropertyChanging();
					this._Advistekst = value;
					this.SendPropertyChanged("Advistekst");
					this.OnAdvistekstChanged();
				}
			}
		}
		
		[Column(Name="advisbelob", Storage="_Advisbelob", DbType="Decimal(18,2) NOT NULL")]
		public decimal Advisbelob
		{
			get
			{
				return this._Advisbelob;
			}
			set
			{
				if ((this._Advisbelob != value))
				{
					this.OnAdvisbelobChanging(value);
					this.SendPropertyChanging();
					this._Advisbelob = value;
					this.SendPropertyChanged("Advisbelob");
					this.OnAdvisbelobChanged();
				}
			}
		}
		
		[Association(Name="TempRykkerforslag_TempRykkerforslaglinie", Storage="_TempRykkerforslag", ThisKey="Rykkerforslagid", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public TempRykkerforslag TempRykkerforslag
		{
			get
			{
				return this._TempRykkerforslag.Entity;
			}
			set
			{
				TempRykkerforslag previousValue = this._TempRykkerforslag.Entity;
				if (((previousValue != value) 
							|| (this._TempRykkerforslag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TempRykkerforslag.Entity = null;
						previousValue.TempRykkerforslaglinie.Remove(this);
					}
					this._TempRykkerforslag.Entity = value;
					if ((value != null))
					{
						value.TempRykkerforslaglinie.Add(this);
						this._Rykkerforslagid = value.Id;
					}
					else
					{
						this._Rykkerforslagid = default(int);
					}
					this.SendPropertyChanged("TempRykkerforslag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
